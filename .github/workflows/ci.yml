name: CI

on:
  merge_group:
  pull_request:
  push:
    branches: [main, dev]

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  ci:
    runs-on: ubuntu-latest

    env:
      ANVIL_MAINNET_FORK_URL: ${{ secrets.CI_ANVIL_MAINNET_FORK_URL }}
      ANVIL_BASE_FORK_URL: ${{ secrets.CI_ANVIL_BASE_FORK_URL }}
      YARN_ENABLE_HARDENED_MODE: 0

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      # No idea how homebrew bundle broke with tilt depending on python so installing manually
      - name: Install Tilt
        run: curl -fsSL https://raw.githubusercontent.com/tilt-dev/tilt/master/scripts/install.sh | bash
      - name: Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@master
      - name: Brew Bundle
        id: brew-bundle
        run: |
          brew bundle
          brew cleanup
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          cache: 'yarn'
      - uses: oven-sh/setup-bun@v1
      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly
      - name: Tilt CI
        shell: bash
        run: tilt ci unit-tests:tests
      - name: All Changes Committed
        shell: bash
        run: git diff --exit-code
      - name: Snaplet Login
        shell: bash
        run: bunx snaplet auth login ${{ secrets.CI_SNAPLET_AUTH_TOKEN }}
      - name: Install Playwright Dependencies
        run: yarn playwright playwright install --with-deps
      # this is on purpose so we get github annotations
      - name: Playwright Tests
        id: playwright
        shell: bash
        run: |
          # set debug logs if runner.debug is set
          if [ "${{runner.debug}}" == "1" ]; then
            export DEBUG=test:*,app:*
          fi
          nohup tilt up playwright:deps &
          echo waiting for tilt to be ready
          for i in {1..10}; do
            curl -s http://localhost:10350 > /dev/null && break || echo "Attempt $i failed, trying again..."
            sleep 1
          done
          echo tilt is ready
          tilt wait --timeout 60s --for=condition=Ready "uiresource/playwright:deps"
          yarn playwright test
      - name: Playwright Report
        uses: actions/upload-artifact@v4
        if: always() && steps.playwright.outcome == 'failure'
        with:
          name: playwright-report
          path: packages/playwright/playwright-report/
          retention-days: 30

  vercel-deploy-preview:
    # skip if on dev since it will be deployed with another workflow
    if: github.ref != 'refs/heads/dev' && github.ref != 'refs/heads/main'
    runs-on: ubuntu-latest

    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          cache: 'yarn'
      - uses: oven-sh/setup-bun@v1
      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly
      - name: Install Vercel CLI
        run: yarn global add vercel
      - name: Switch to Vercel Send team
        run: vercel --token=${{ secrets.VERCEL_TOKEN }}  team switch 0xsend
      - name: Pull Vercel Environment Information
        run: vercel --token=${{ secrets.VERCEL_TOKEN }} pull --yes --environment=preview
      - name: Build Project Artifacts
        run: vercel --token=${{ secrets.VERCEL_TOKEN }} build
      - name: Extract branch name
        shell: bash
        run: |
          branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}
          branch="${branch//\//-}"        # Replace / with -
          branch="${branch//_/-}"         # Replace _ with -
          branch="${branch,,}"            # Convert to lowercase
          branch="${branch//[^a-z0-9-]/}" # Remove any character that is not a-z, 0-9, or -
          branch="${branch%-}"            # Remove trailing hyphen, if any
          branch="${branch#-}"            # Remove leading hyphen, if any
          echo "branch=${branch}" >> $GITHUB_OUTPUT
          echo "public_url=https://sendapp-${BRANCH}-0xsend.vercel.app" >> $GITHUB_OUTPUT
        id: extract_branch
      - name: Deploy Project Artifacts to Vercel
        id: deploy
        run: |
          vercel --token=${{ secrets.VERCEL_TOKEN }} deploy --prebuilt \
            --env=NEXT_PUBLIC_URL=${{ steps.extract_branch.outputs.public_url }} \
            > deployment-url.txt && \
            echo "deployment_url=$(cat deployment-url.txt)" >> $GITHUB_OUTPUT
          echo ::notice::Deployment URL: $(cat deployment-url.txt)
      - name: Set Vercel alias
        run: vercel --token=${{ secrets.VERCEL_TOKEN }} -S 0xsend alias set ${{ steps.deploy.outputs.deployment_url }} ${{ steps.extract_branch.outputs.public_url }}
