name: Deploy Staging

on:
  push:
    branches:
      - dev
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}

jobs:
  supabase-deploy:
    runs-on: ubuntu-latest

    env:
      SUPABASE_ACCESS_TOKEN: '' # ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      SUPABASE_DB_PASSWORD: '' # ${{ secrets.STAGING_DB_PASSWORD }}
      SUPABASE_PROJECT_ID: '' # ${{ secrets.STAGING_PROJECT_ID }}

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: supabase/setup-cli@v1
        with:
          version: latest

      - run: echo todo # supabase link --project-ref $SUPABASE_PROJECT_ID
      - run: echo todo # supabase db push

  vercel-deploy:
    runs-on: ubuntu-latest

    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          cache: 'yarn'
      - uses: oven-sh/setup-bun@v1
      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly
      - name: Install Vercel CLI
        run: yarn global add vercel
      - name: Switch to Vercel Send team
        run: vercel --token=${{ secrets.VERCEL_TOKEN }} team switch 0xsend
      - name: Pull Vercel Environment Information
        run: vercel --token=${{ secrets.VERCEL_TOKEN }} pull --yes --environment=preview
      - name: Build Project Artifacts
        run: vercel --token=${{ secrets.VERCEL_TOKEN }} build
      - name: Extract branch name
        shell: bash
        run: |
          branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}
          branch="${branch//\//-}"        # Replace / with -
          branch="${branch//_/-}"         # Replace _ with -
          branch="${branch,,}"            # Convert to lowercase
          branch="${branch//[^a-z0-9-]/}" # Remove any character that is not a-z, 0-9, or -
          branch="${branch%-}"            # Remove trailing hyphen, if any
          branch="${branch#-}"            # Remove leading hyphen, if any
          echo "branch=${branch}" >> $GITHUB_OUTPUT
          echo "public_url=https://sendapp-${BRANCH}-0xsend.vercel.app" >> $GITHUB_OUTPUT
        id: extract_branch
      - name: Deploy Project Artifacts to Vercel
        id: deploy
        run: |
          vercel --token=${{ secrets.VERCEL_TOKEN }} deploy --prebuilt \
            --env=NEXT_PUBLIC_URL=${{ steps.extract_branch.outputs.public_url }} \
            > deployment-url.txt && \
            echo "deployment_url=$(cat deployment-url.txt)" >> $GITHUB_OUTPUT
          echo ::notice::Deployment URL: $(cat deployment-url.txt)
      - name: Set Vercel alias
        run: vercel --token=${{ secrets.VERCEL_TOKEN }} -S 0xsend alias set ${{ steps.deploy.outputs.deployment_url }} ${{ steps.extract_branch.outputs.public_url }}
