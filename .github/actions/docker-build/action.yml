name: "Build and Push Next App Docker Image"
description: "Builds the next-app Docker image using Buildx, caches layers with GHCR, tags, and pushes to GHCR."

inputs:
  build-args:
    description: "Build arguments to pass to docker buildx build (e.g., 'ARG1=value1 ARG2=value2')"
    required: false
    default: ""
  ghcr-token:
    description: "Token for authenticating with GHCR"
    required: true
    default: ${{ github.token }}
  image-name:
    description: "Base name for the image in GHCR (e.g., next-app)"
    required: true
    default: "next-app"

outputs:
  image-tag:
    description: "The full GHCR tag of the pushed image (e.g., ghcr.io/owner/repo/next-app:sha)"
    value: ${{ steps.build-and-push.outputs.image-tag }}

runs:
  using: "composite"
  steps:
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ inputs.ghcr-token }}

    - name: Generate Image Tag
      id: generate-tag
      shell: bash
      run: |
        SHORT_SHA=$(git rev-parse --short=10 HEAD)
        IMAGE_TAG="ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}/${{ inputs.image-name }}:${SHORT_SHA}"
        echo "IMAGE_TAG=${IMAGE_TAG,,}" >> $GITHUB_OUTPUT # Lowercase for Docker compatibility

    - name: Build and Push Docker Image
      id: build-and-push
      shell: bash
      run: |
        BUILD_ARGS_STRING=""
        if [[ -n "${{ inputs.build-args }}" ]]; then
          for arg in ${{ inputs.build-args }}; do
            BUILD_ARGS_STRING+=" --build-arg $arg"
          done
        fi

        echo "Building image: ${{ steps.generate-tag.outputs.IMAGE_TAG }}"
        echo "Using build args:${BUILD_ARGS_STRING}" # Be careful not to expose secrets here

        docker buildx build \
          --tag ${{ steps.generate-tag.outputs.IMAGE_TAG }} \
          --cache-from type=gha \
          --cache-to type=gha,mode=max \
          --push \
          -f ./apps/next/Dockerfile \
          ${BUILD_ARGS_STRING} \
          .

        echo "image-tag=${{ steps.generate-tag.outputs.IMAGE_TAG }}" >> $GITHUB_OUTPUT
