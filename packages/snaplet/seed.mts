import { createSeedClient } from '@snaplet/seed'
import { models } from './src'

// You can use @snaplet/copycat to generate fake data for a field, for example:
// ```
// await seed.users([{ email: ({ seed }) => copycat.email(seed) }])
// ```
// More on this in our docs: https://docs.snaplet.dev/core-concepts/seed#inside-the-snapletseed-workflow
import { copycat } from '@snaplet/copycat'

// This is a basic example generated by Snaplet to start you off, check out the docs for where to go from here
// * For more on getting started with @snaplet/seed: https://docs.snaplet.dev/getting-started/quick-start/seed
// * For a more detailed reference: https://docs.snaplet.dev/core-concepts/seed
;(async () => {
  const seed = await createSeedClient({
    dryRun: process.env.DRY !== '0',
    models,
  })

  // Clears all existing data in the database, but keep the structure
  await seed.$resetDatabase()

  await seed.users([
    {
      tags: [
        {
          name: 'jane',
          status: 'confirmed',
        },
        {
          name: '0xjane',
          status: 'confirmed',
        },
      ],
      sendAccounts: [{}],
    },
    {
      tags: [
        {
          name: 'john',
          status: 'confirmed',
        },
        {
          name: '0xjohn',
          status: 'confirmed',
        },
      ],
      sendAccounts: [{}],
    },
  ])

  console.log('done')
})()
