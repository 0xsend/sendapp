// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DepositScreen renders the deposit screen 1`] = `
[
  <View
    style={
      {
        "flexDirection": "column",
        "marginLeft": "auto",
        "marginRight": "auto",
        "marginTop": 18,
        "maxWidth": 600,
        "width": "100%",
      }
    }
  >
    <View
      style={
        {
          "flexDirection": "column",
          "width": "100%",
        }
      }
    >
      <View
        style={
          {
            "alignItems": "center",
            "flexDirection": "row",
            "marginTop": 20,
            "width": "100%",
          }
        }
      >
        <Text
          accessibilityRole="header"
          style={
            {
              "color": "#FFFFFF",
              "fontFamily": "System",
              "fontSize": 20,
              "fontWeight": "400",
              "lineHeight": 24,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "textTransform": "none",
              "userSelect": "auto",
            }
          }
          suppressHighlighting={true}
        >
          Deposit on Base
        </Text>
        <View
          cancelable={true}
          disabled={false}
          focusVisibleStyle={{}}
          focusable={[Function]}
          minPressDuration={0}
          onBlur={[Function]}
          onFocus={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onPress={[Function]}
          onPressIn={[Function]}
          onPressOut={[Function]}
          role="button"
          style={
            {
              "alignItems": "center",
              "backgroundColor": "transparent",
              "borderBottomColor": "transparent",
              "borderBottomLeftRadius": 16,
              "borderBottomRightRadius": 16,
              "borderBottomWidth": 1,
              "borderLeftColor": "transparent",
              "borderLeftWidth": 1,
              "borderRightColor": "transparent",
              "borderRightWidth": 1,
              "borderStyle": "solid",
              "borderTopColor": "transparent",
              "borderTopLeftRadius": 16,
              "borderTopRightRadius": 16,
              "borderTopWidth": 1,
              "flexDirection": "row",
              "flexWrap": "nowrap",
              "height": 44,
              "justifyContent": "center",
              "paddingLeft": 18,
              "paddingRight": 18,
              "shadowColor": "rgb(0,0,0)",
              "shadowOffset": {
                "height": 0,
                "width": 0,
              },
              "shadowOpacity": 0,
              "shadowRadius": 0,
            }
          }
        >
          <Text
            lineBreakMode="clip"
            numberOfLines={1}
            style={
              {
                "color": "#FFFFFF",
                "flexGrow": 0,
                "flexShrink": 1,
                "fontFamily": "System",
                "fontSize": 16.8,
                "fontWeight": "500",
                "lineHeight": 19,
                "paddingLeft": 7,
                "paddingRight": 7,
                "userSelect": "none",
              }
            }
            suppressHighlighting={true}
          >
            0xb0b0...00000
          </Text>
          <View
            pointerEvents="none"
            style={
              {
                "height": 0,
                "minHeight": 0,
                "minWidth": 11.088000000000001,
                "width": 11.088000000000001,
              }
            }
          />
          <RNSVGSvgView
            align="xMidYMid"
            bbHeight={16}
            bbWidth={16}
            color="#40FB50"
            fill="none"
            focusable={false}
            height={16}
            meetOrSlice={0}
            minX={0}
            minY={0}
            strokeWidth="2"
            style={
              [
                {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                {
                  "color": "#40FB50",
                },
                {
                  "flex": 0,
                  "height": 16,
                  "width": 16,
                },
              ]
            }
            tintColor="#40FB50"
            vbHeight={16}
            vbWidth={16}
            width={16}
          >
            <RNSVGGroup
              fill={null}
              propList={
                [
                  "fill",
                  "strokeWidth",
                ]
              }
              strokeWidth="2"
            >
              <RNSVGPath
                d="M13.2727 0H8.36364C6.85982 0 5.63636 1.22345 5.63636 2.72727V4H7.45455V2.72727C7.45455 2.226 7.86236 1.81818 8.36364 1.81818H13.2727C13.774 1.81818 14.1818 2.226 14.1818 2.72727V7.45455C14.1818 7.95582 13.774 8.36364 13.2727 8.36364H12.1818V10.1818H13.2727C14.7765 10.1818 16 8.95836 16 7.45455V2.72727C16 1.22345 14.7765 0 13.2727 0ZM7.63636 5.81818H2.72727C1.22345 5.81818 0 7.04164 0 8.54545V13.2727C0 14.7765 1.22345 16 2.72727 16H7.63636C9.14018 16 10.3636 14.7765 10.3636 13.2727V8.54545C10.3636 7.04164 9.14018 5.81818 7.63636 5.81818ZM8.54545 13.2727C8.54545 13.774 8.13764 14.1818 7.63636 14.1818H2.72727C2.226 14.1818 1.81818 13.774 1.81818 13.2727V8.54545C1.81818 8.04418 2.226 7.63636 2.72727 7.63636H7.63636C8.13764 7.63636 8.54545 8.04418 8.54545 8.54545V13.2727Z"
                fill={
                  {
                    "type": 2,
                  }
                }
                propList={
                  [
                    "fill",
                    "strokeWidth",
                    "strokeLinecap",
                  ]
                }
                strokeLinecap={1}
                strokeWidth="2"
              />
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
      </View>
    </View>
  </View>,
  <View
    pointerEvents="box-none"
    style={
      {
        "bottom": 0,
        "flexDirection": "column",
        "left": 0,
        "maxWidth": "100%",
        "position": "absolute",
        "right": 0,
        "top": 0,
        "zIndex": 100001,
      }
    }
  >
    <View
      collapsable={false}
      disableClassName={true}
      forwardedRef={[Function]}
      jestAnimatedStyle={
        {
          "value": {
            "transform": [
              {
                "translateY": 10000.1,
              },
            ],
          },
        }
      }
      onLayout={[Function]}
      style={
        {
          "height": "80%",
          "minHeight": "80%",
          "opacity": 0,
          "pointerEvents": "none",
          "position": "absolute",
          "transform": [
            {
              "translateY": 10000.1,
            },
          ],
          "width": "100%",
          "zIndex": 100001,
        }
      }
    >
      <View
        pointerEvents="none"
        style={
          {
            "backgroundColor": "#081619",
            "borderTopLeftRadius": 16,
            "borderTopRightRadius": 16,
            "flex": 1,
            "flexDirection": "column",
            "height": 0,
            "maxHeight": "100%",
            "overflow": "hidden",
            "paddingBottom": 18,
            "paddingLeft": 18,
            "paddingRight": 18,
            "paddingTop": 18,
            "width": "100%",
          }
        }
      />
      <View
        style={
          {
            "backgroundColor": "#081619",
            "borderBottomLeftRadius": 0,
            "borderBottomRightRadius": 0,
            "borderBottomWidth": 0,
            "borderLeftWidth": 0,
            "borderRightWidth": 0,
            "borderStyle": "solid",
            "borderTopLeftRadius": 0,
            "borderTopRightRadius": 0,
            "borderTopWidth": 0,
            "bottom": "-100%",
            "flex": 1,
            "flexDirection": "column",
            "height": 0,
            "left": 0,
            "maxHeight": "100%",
            "overflow": "hidden",
            "paddingBottom": 18,
            "paddingLeft": 18,
            "paddingRight": 18,
            "paddingTop": 18,
            "position": "absolute",
            "right": 0,
            "shadowColor": undefined,
            "shadowOffset": {
              "height": 0,
              "width": 0,
            },
            "shadowOpacity": 0,
            "shadowRadius": 0,
            "width": "100%",
            "zIndex": -1,
          }
        }
      />
    </View>
  </View>,
]
`;
