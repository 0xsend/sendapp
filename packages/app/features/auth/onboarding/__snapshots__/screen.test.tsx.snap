// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`OnboardingScreen 1`] = `
<View
  style={
    {
      "flexDirection": "column",
      "height": "100%",
      "justifyContent": "flex-start",
      "paddingTop": 39,
      "width": "100%",
    }
  }
>
  <View>
    <RNSVGSvgView
      align="xMidYMid"
      bbHeight="28"
      bbWidth="77"
      color="hsla(191, 32%, 99%, 1)"
      focusable={false}
      height={28}
      meetOrSlice={0}
      minX={0}
      minY={0}
      strokeWidth="2"
      style={
        [
          {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          {
            "color": "hsla(191, 32%, 99%, 1)",
          },
          {
            "flex": 0,
            "height": 28,
            "width": 77,
          },
        ]
      }
      tintColor="hsla(191, 32%, 99%, 1)"
      vbHeight={48}
      vbWidth={132}
      width={77}
    >
      <RNSVGGroup
        fill={
          {
            "payload": 4278190080,
            "type": 0,
          }
        }
        propList={
          [
            "strokeWidth",
          ]
        }
        strokeWidth="2"
      >
        <RNSVGGroup
          clipPath="clip0_12_4001"
          fill={
            {
              "payload": 4278190080,
              "type": 0,
            }
          }
        >
          <RNSVGPath
            d="M0 48L13.7008 0H20.088L6.38718 48H0Z"
            fill={
              {
                "type": 2,
              }
            }
            propList={
              [
                "fill",
              ]
            }
          />
          <RNSVGPath
            d="M30.0983 42.7777C27.6587 42.7777 25.5382 42.3882 23.7368 41.6092C21.9355 40.8302 20.5149 39.7437 19.4804 38.3497C18.4408 36.9558 17.8335 35.3517 17.6533 33.5374H24.2052C24.3853 34.3011 24.7147 34.998 25.1882 35.6284C25.6617 36.2639 26.3051 36.761 27.1286 37.1249C27.9469 37.4888 28.9197 37.6681 30.0468 37.6681C31.174 37.6681 32.0283 37.5144 32.7232 37.2069C33.4128 36.8994 33.9224 36.4894 34.2518 35.982C34.5812 35.4747 34.7407 34.9314 34.7407 34.3523C34.7407 33.4811 34.504 32.8148 34.0304 32.3433C33.5569 31.8718 32.8724 31.5029 31.982 31.2312C31.0916 30.9596 30.0262 30.6982 28.7859 30.442C27.4734 30.1909 26.2125 29.8731 24.9927 29.4888C23.7729 29.1095 22.6817 28.6278 21.7193 28.0487C20.7568 27.4695 19.99 26.7264 19.429 25.8193C18.8628 24.9122 18.5849 23.8103 18.5849 22.5035C18.5849 20.9096 19.0121 19.4798 19.8664 18.2088C20.7208 16.943 21.9612 15.9333 23.5773 15.1902C25.1985 14.4471 27.1337 14.0781 29.3932 14.0781C32.5945 14.0781 35.1524 14.811 37.0619 16.2767C38.9714 17.7424 40.0934 19.8027 40.4176 22.4471H34.1951C34.015 21.4324 33.5055 20.6431 32.6665 20.0845C31.8276 19.5259 30.721 19.244 29.3366 19.244C27.9521 19.244 26.8352 19.5054 26.0889 20.0333C25.3426 20.5611 24.9721 21.2581 24.9721 22.1242C24.9721 22.7034 25.1985 23.2107 25.6566 23.6463C26.1095 24.082 26.7735 24.4561 27.6484 24.7585C28.5234 25.066 29.5939 25.3632 30.8703 25.6553C32.9084 26.0551 34.7098 26.5266 36.2745 27.0698C37.8391 27.613 39.0743 28.4125 39.9853 29.4631C40.8963 30.5137 41.3492 32 41.3492 33.9218C41.3852 35.6592 40.9374 37.2018 40.011 38.5445C39.0846 39.8872 37.7825 40.9276 36.1098 41.6707C34.437 42.4138 32.4349 42.7828 30.1034 42.7828L30.0983 42.7777Z"
            fill={
              {
                "type": 2,
              }
            }
            propList={
              [
                "fill",
              ]
            }
          />
          <RNSVGPath
            d="M57.2068 42.7777C54.479 42.7777 52.0755 42.1883 50.0013 41.0096C47.9271 39.8308 46.3059 38.1755 45.1427 36.0333C43.9795 33.8962 43.3979 31.4311 43.3979 28.6431C43.3979 25.8552 43.9692 23.2056 45.117 21.0326C46.2647 18.8597 47.8808 17.1531 49.9756 15.9231C52.0703 14.6931 54.4996 14.073 57.2634 14.073C60.0273 14.073 62.3022 14.6726 64.3043 15.8667C66.3064 17.0608 67.8504 18.6649 68.9467 20.679C70.0378 22.688 70.5834 24.9481 70.5834 27.449V28.6431C70.5834 29.0788 70.5473 29.5298 70.4753 30.0012H48.0918V25.8142H63.98C63.908 23.8206 63.2337 22.2524 61.9625 21.1095C60.6861 19.9667 59.106 19.3978 57.212 19.3978C55.8635 19.3978 54.6283 19.7053 53.5011 20.3203C52.374 20.9353 51.4836 21.8526 50.8248 23.0672C50.1711 24.2818 49.8417 25.8142 49.8417 27.6592V29.2376C49.8417 30.9391 50.1608 32.41 50.799 33.6399C51.4373 34.8699 52.3071 35.8078 53.4188 36.4381C54.5305 37.0736 55.776 37.3914 57.1605 37.3914C58.6891 37.3914 59.9552 37.0634 60.9537 36.4125C61.9522 35.7617 62.6933 34.8904 63.1668 33.8039H69.8268C69.3172 35.5054 68.4783 37.0378 67.3151 38.3959C66.152 39.754 64.7109 40.8251 63.0021 41.6041C61.2934 42.3831 59.3633 42.7725 57.2171 42.7725L57.2068 42.7777Z"
            fill={
              {
                "type": 2,
              }
            }
            propList={
              [
                "fill",
              ]
            }
          />
          <RNSVGPath
            d="M73.8821 42.1268V14.729H79.6671L80.1561 19.2953C80.995 17.7014 82.1942 16.4356 83.7588 15.4926C85.3234 14.5496 87.1814 14.0781 89.3277 14.0781C91.4739 14.0781 93.4399 14.5394 95.0046 15.4619C96.5692 16.3843 97.7787 17.7373 98.6331 19.5105C99.4874 21.2889 99.9146 23.4977 99.9146 26.1422V42.1217H93.3627V26.7367C93.3627 24.451 92.8532 22.6982 91.8341 21.4631C90.8151 20.2332 89.3019 19.613 87.305 19.613C85.9925 19.613 84.8191 19.9205 83.7845 20.5355C82.7449 21.1505 81.9266 22.0474 81.3295 23.2261C80.7274 24.4048 80.4288 25.8296 80.4288 27.4952V42.1166H73.877L73.8821 42.1268Z"
            fill={
              {
                "type": 2,
              }
            }
            propList={
              [
                "fill",
              ]
            }
          />
          <RNSVGPath
            d="M116.225 42.7777C113.677 42.7777 111.402 42.1627 109.4 40.9276C107.398 39.6976 105.844 37.991 104.732 35.818C103.621 33.6451 103.07 31.18 103.07 28.4279C103.07 25.6758 103.636 23.221 104.763 21.0634C105.89 18.9058 107.465 17.2043 109.483 15.9538C111.5 14.7034 113.785 14.0781 116.333 14.0781C118.407 14.0781 120.219 14.4676 121.763 15.2466C123.307 16.0256 124.537 17.1223 125.448 18.5368V2.98779H132V42.1268H126.102L125.448 38.1601C124.867 38.9596 124.156 39.7078 123.317 40.4151C122.478 41.1223 121.48 41.6912 120.317 42.1268C119.154 42.5624 117.785 42.7777 116.22 42.7777H116.225ZM117.589 37.1249C119.154 37.1249 120.538 36.7559 121.737 36.0128C122.936 35.2697 123.868 34.2447 124.522 32.9429C125.175 31.6361 125.505 30.1345 125.505 28.433C125.505 26.7315 125.175 25.2248 124.522 23.9231C123.868 22.6214 122.936 21.6066 121.737 20.8789C120.538 20.1563 119.154 19.7924 117.589 19.7924C116.024 19.7924 114.748 20.1563 113.549 20.8789C112.35 21.6066 111.413 22.6162 110.739 23.9231C110.064 25.2299 109.73 26.7315 109.73 28.433C109.73 30.1345 110.064 31.6412 110.739 32.9429C111.413 34.2447 112.35 35.2697 113.549 36.0128C114.748 36.7559 116.096 37.1249 117.589 37.1249Z"
            fill={
              {
                "type": 2,
              }
            }
            propList={
              [
                "fill",
              ]
            }
          />
        </RNSVGGroup>
        <RNSVGDefs>
          <RNSVGClipPath
            fill={
              {
                "payload": 4278190080,
                "type": 0,
              }
            }
            name="clip0_12_4001"
          >
            <RNSVGRect
              fill={
                {
                  "type": 2,
                }
              }
              height="48"
              propList={
                [
                  "fill",
                ]
              }
              width="132"
              x="0"
              y="0"
            />
          </RNSVGClipPath>
        </RNSVGDefs>
      </RNSVGGroup>
    </RNSVGSvgView>
  </View>
  <View
    style={
      {
        "flex": 3,
        "flexDirection": "column",
        "gap": 18,
        "justifyContent": "center",
        "maxWidth": "100%",
      }
    }
  >
    <View
      onLayout={[Function]}
      onSubmit={[Function]}
      style={
        {
          "flex": 1,
          "flexDirection": "column",
          "gap": 18,
          "justifyContent": "space-between",
        }
      }
    >
      <View
        style={
          {
            "flex": 1,
            "flexDirection": "column",
            "gap": 24,
            "justifyContent": "center",
          }
        }
      >
        <Text
          accessibilityRole="header"
          selectable={true}
          style={
            {
              "color": "hsla(191, 32%, 99%, 1)",
              "fontFamily": "System",
              "fontSize": 64,
              "fontWeight": "700",
              "lineHeight": 57,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "textTransform": "none",
            }
          }
          suppressHighlighting={true}
        >
          SETUP PASSKEY
        </Text>
        <Text
          accessibilityRole="header"
          selectable={true}
          style={
            {
              "color": "hsla(112, 22%, 59%, 1)",
              "fontFamily": "System",
              "fontSize": 16,
              "fontWeight": "700",
              "lineHeight": 20,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "textTransform": "uppercase",
            }
          }
          suppressHighlighting={true}
        >
          Start by creating a Passkey below. Send uses passkeys to secure your account
        </Text>
        <View
          style={
            {
              "flexDirection": "column",
              "gap": 18,
            }
          }
        >
          <Text
            selectable={true}
            style={
              {
                "color": "hsla(191, 32%, 99%, 1)",
                "fontFamily": "System",
                "fontSize": 13.2,
                "fontWeight": "500",
                "lineHeight": 16,
              }
            }
            suppressHighlighting={true}
          >
            Passkey Name
          </Text>
          <View
            style={
              {
                "flex": 1,
                "flexDirection": "column",
              }
            }
          >
            <View
              style={
                {
                  "flex": 1,
                  "flexDirection": "column",
                }
              }
            >
              <View
                animatedStyle={
                  {
                    "value": {
                      "transform": [
                        {
                          "translateX": 0,
                        },
                      ],
                    },
                  }
                }
                collapsable={false}
                style={
                  {
                    "transform": [
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <TextInput
                  accessibilityLabel="Account name"
                  control={
                    {
                      "_defaultValues": {
                        "accountName": "mock",
                      },
                      "_disableForm": [Function],
                      "_executeSchema": [Function],
                      "_fields": {
                        "accountName": {
                          "_f": {
                            "mount": true,
                            "name": "accountName",
                            "ref": {
                              "name": "accountName",
                            },
                            "value": "mock",
                          },
                        },
                      },
                      "_formState": {
                        "dirtyFields": {},
                        "disabled": false,
                        "errors": {},
                        "isDirty": false,
                        "isLoading": false,
                        "isSubmitSuccessful": false,
                        "isSubmitted": false,
                        "isSubmitting": false,
                        "isValid": true,
                        "isValidating": false,
                        "submitCount": 0,
                        "touchedFields": {},
                      },
                      "_formValues": {
                        "accountName": "mock",
                      },
                      "_getDirty": [Function],
                      "_getFieldArray": [Function],
                      "_getWatch": [Function],
                      "_names": {
                        "array": Set {},
                        "focus": "",
                        "mount": Set {
                          "accountName",
                        },
                        "unMount": Set {},
                        "watch": Set {},
                        "watchAll": false,
                      },
                      "_options": {
                        "mode": "onSubmit",
                        "reValidateMode": "onChange",
                        "shouldFocusError": true,
                      },
                      "_proxyFormState": {
                        "dirtyFields": false,
                        "disabled": true,
                        "errors": true,
                        "isDirty": false,
                        "isSubmitting": true,
                        "isValid": true,
                        "isValidating": false,
                        "touchedFields": false,
                      },
                      "_removeUnmounted": [Function],
                      "_reset": [Function],
                      "_resetDefaultValues": [Function],
                      "_state": {
                        "action": false,
                        "mount": true,
                        "watch": false,
                      },
                      "_subjects": {
                        "array": {
                          "next": [Function],
                          "observers": [],
                          "subscribe": [Function],
                          "unsubscribe": [Function],
                        },
                        "state": {
                          "next": [Function],
                          "observers": [
                            {
                              "next": [Function],
                            },
                            {
                              "next": [Function],
                            },
                            {
                              "next": [Function],
                            },
                          ],
                          "subscribe": [Function],
                          "unsubscribe": [Function],
                        },
                        "values": {
                          "next": [Function],
                          "observers": [
                            {
                              "next": [Function],
                            },
                          ],
                          "subscribe": [Function],
                          "unsubscribe": [Function],
                        },
                      },
                      "_updateDisabledField": [Function],
                      "_updateFieldArray": [Function],
                      "_updateFormState": [Function],
                      "_updateValid": [Function],
                      "getFieldState": [Function],
                      "handleSubmit": [Function],
                      "register": [Function],
                      "setError": [Function],
                      "unregister": [Function],
                    }
                  }
                  focusVisibleStyle={{}}
                  focusable={true}
                  fontVariant={
                    [
                      "tabular-nums",
                    ]
                  }
                  id=":r0:"
                  name="accountName"
                  onBlur={[Function]}
                  onChangeText={[Function]}
                  onFocus={[Function]}
                  placeholder="My Send Account"
                  placeholderTextColor="hsla(191, 32%, 50%, 1)"
                  readOnly={false}
                  style={
                    {
                      "backgroundColor": "transparent",
                      "borderBottomColor": "hsla(125, 96%, 55%, 1)",
                      "borderBottomLeftRadius": 0,
                      "borderBottomRightRadius": 0,
                      "borderBottomWidth": 2,
                      "borderLeftColor": "hsla(191, 32%, 32%, 1)",
                      "borderLeftWidth": 0,
                      "borderRightColor": "hsla(191, 32%, 32%, 1)",
                      "borderRightWidth": 0,
                      "borderStyle": "solid",
                      "borderTopColor": "hsla(191, 32%, 32%, 1)",
                      "borderTopLeftRadius": 0,
                      "borderTopRightRadius": 0,
                      "borderTopWidth": 0,
                      "color": "hsla(112, 22%, 59%, 1)",
                      "fontFamily": "System",
                      "fontSize": 20,
                      "fontWeight": "400",
                      "height": 44,
                      "minWidth": 0,
                      "paddingLeft": 16,
                      "paddingRight": 16,
                      "position": "relative",
                      "width": "100%",
                    }
                  }
                  value="mock"
                />
              </View>
              <View
                style={
                  {
                    "gap": 7,
                    "position": "absolute",
                    "right": 18,
                    "top": "50%",
                    "transform": "translateY(-50%)",
                  }
                }
              />
            </View>
            <View
              pointerEvents="none"
              style={
                {
                  "height": 18,
                  "minHeight": 18,
                  "minWidth": 18,
                  "width": 18,
                }
              }
            />
            <Text
              accessibilityRole="link"
              cancelable={true}
              disabled={false}
              focusable={true}
              minPressDuration={0}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onPress={[Function]}
              onPressIn={[Function]}
              onPressOut={[Function]}
              style={
                {
                  "color": "hsla(125, 96%, 40%, 1)",
                  "display": "flex",
                  "fontFamily": "System",
                  "fontSize": 16.8,
                  "fontWeight": "400",
                  "justifyContent": "flex-end",
                  "lineHeight": 19,
                }
              }
              suppressHighlighting={true}
            >
              Why Passkey?
            </Text>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={
          {
            "paddingBottom": 0,
          }
        }
      >
        <View
          style={
            {
              "flexDirection": "column-reverse",
              "gap": 18,
              "paddingBottom": 18,
              "paddingLeft": 18,
              "paddingRight": 18,
            }
          }
        >
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "height": "100%",
                "justifyContent": "center",
                "paddingLeft": 7,
                "paddingRight": 7,
                "width": "100%",
              }
            }
          >
            <Text
              accessibilityRole="link"
              cancelable={true}
              disabled={false}
              focusable={true}
              minPressDuration={0}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onPress={[Function]}
              onPressIn={[Function]}
              onPressOut={[Function]}
              style={
                {
                  "color": "hsla(125, 96%, 40%, 1)",
                  "display": "none",
                  "fontFamily": "System",
                  "fontSize": 16.8,
                  "fontWeight": "400",
                  "lineHeight": 19,
                }
              }
              suppressHighlighting={true}
            >
              Why Passkey?
            </Text>
            <View
              accessibilityRole="button"
              accessibilityState={
                {
                  "busy": false,
                }
              }
              cancelable={true}
              disabled={false}
              focusVisibleStyle={{}}
              focusable={[Function]}
              minPressDuration={0}
              onBlur={[Function]}
              onFocus={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onPress={[Function]}
              onPressIn={[Function]}
              onPressOut={[Function]}
              style={
                {
                  "alignItems": "center",
                  "alignSelf": "auto",
                  "backgroundColor": "hsla(125, 96%, 47%, 1)",
                  "borderBottomColor": "transparent",
                  "borderBottomLeftRadius": 9,
                  "borderBottomRightRadius": 9,
                  "borderBottomWidth": 1,
                  "borderLeftColor": "transparent",
                  "borderLeftWidth": 1,
                  "borderRightColor": "transparent",
                  "borderRightWidth": 1,
                  "borderStyle": "solid",
                  "borderTopColor": "transparent",
                  "borderTopLeftRadius": 9,
                  "borderTopRightRadius": 9,
                  "borderTopWidth": 1,
                  "flexDirection": "row",
                  "flexWrap": "nowrap",
                  "height": 44,
                  "justifyContent": "center",
                  "marginBottom": "auto",
                  "marginLeft": "auto",
                  "marginRight": "auto",
                  "paddingLeft": 18,
                  "paddingRight": 18,
                  "width": "100%",
                }
              }
              testID="SubmitButton"
            >
              <Text
                lineBreakMode="clip"
                numberOfLines={1}
                style={
                  {
                    "color": "hsla(191, 32%, 10%, 1)",
                    "flexGrow": 0,
                    "flexShrink": 1,
                    "fontFamily": "System",
                    "fontSize": 16.8,
                    "fontWeight": "400",
                    "lineHeight": 19,
                  }
                }
                suppressHighlighting={true}
                userSelect="none"
              >
                <Text
                  lineBreakMode="clip"
                  numberOfLines={1}
                  style={
                    {
                      "color": "black",
                      "flexGrow": 0,
                      "flexShrink": 1,
                      "fontFamily": "System",
                      "fontSize": 13.2,
                      "fontWeight": "300",
                      "lineHeight": 16,
                      "textAlign": "center",
                    }
                  }
                  suppressHighlighting={true}
                  userSelect="none"
                >
                  CREATE PASSKEY
                </Text>
              </Text>
              <View
                pointerEvents="none"
                style={
                  {
                    "height": 0,
                    "minHeight": 0,
                    "minWidth": 11.088000000000001,
                    "width": 11.088000000000001,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;
