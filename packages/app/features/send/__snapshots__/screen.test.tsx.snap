// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SendScreen should render send form when profile is found 1`] = `
[
  <View
    style={
      {
        "flexDirection": "row",
        "gap": 18,
        "width": "100%",
      }
    }
  >
    <View
      style={
        {
          "display": "flex",
          "flex": 1,
          "flexDirection": "column",
          "gap": 24,
        }
      }
      testID="SendFormContainer"
    >
      <View
        cancelable={true}
        disabled={false}
        focusable={true}
        minPressDuration={0}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onPress={[Function]}
        onPressIn={[Function]}
        onPressOut={[Function]}
        style={
          {
            "alignItems": "center",
            "backgroundColor": "#111f22",
            "borderBottomLeftRadius": 16,
            "borderBottomRightRadius": 16,
            "borderTopLeftRadius": 16,
            "borderTopRightRadius": 16,
            "flexDirection": "row",
            "justifyContent": "space-between",
            "paddingBottom": 24,
            "paddingLeft": 24,
            "paddingRight": 24,
            "paddingTop": 24,
            "position": "relative",
          }
        }
      >
        <View
          style={
            {
              "alignItems": "center",
              "flexDirection": "row",
              "gap": 24,
              "width": "80%",
            }
          }
        >
          <View
            testID="MockSolitoLink"
          >
            <View
              cancelable={true}
              disabled={false}
              focusable={true}
              minPressDuration={0}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onPress={[Function]}
              onPressIn={[Function]}
              onPressOut={[Function]}
              style={
                {
                  "alignItems": "center",
                  "borderBottomLeftRadius": 9,
                  "borderBottomRightRadius": 9,
                  "borderTopLeftRadius": 9,
                  "borderTopRightRadius": 9,
                  "flexDirection": "column",
                  "height": 64,
                  "justifyContent": "center",
                  "maxHeight": 64,
                  "maxWidth": 64,
                  "minHeight": 64,
                  "minWidth": 64,
                  "overflow": "hidden",
                  "position": "relative",
                  "width": 64,
                }
              }
            >
              <View
                style={
                  {
                    "bottom": 0,
                    "flexDirection": "column",
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                    "zIndex": 1,
                  }
                }
              >
                <Image
                  accessibilityLabel="??"
                  accessibilityRole="image"
                  accessible={true}
                  fullscreen={true}
                  onError={[Function]}
                  onLoad={[Function]}
                  source={
                    {
                      "uri": "https://avatars.githubusercontent.com/u/123",
                    }
                  }
                  style={
                    {
                      "height": 64,
                      "width": 64,
                    }
                  }
                  testID="avatarImage"
                />
              </View>
              <View
                style={
                  {
                    "bottom": 0,
                    "flexDirection": "column",
                    "justifyContent": "center",
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                    "zIndex": 0,
                  }
                }
              >
                <RNSVGSvgView
                  align="xMidYMid"
                  bbHeight={64}
                  bbWidth={64}
                  color="#86AE80"
                  focusable={false}
                  height={64}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  strokeWidth="2"
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      {
                        "color": "#86AE80",
                      },
                      {
                        "flex": 0,
                        "height": 64,
                        "width": 64,
                      },
                    ]
                  }
                  tintColor="#86AE80"
                  vbHeight={24}
                  vbWidth={24}
                  width={64}
                >
                  <RNSVGGroup
                    fill={
                      {
                        "payload": 4278190080,
                        "type": 0,
                      }
                    }
                    propList={
                      [
                        "strokeWidth",
                      ]
                    }
                    strokeWidth="2"
                  >
                    <RNSVGPath
                      d="M12 12C10.9 12 9.95833 11.6083 9.175 10.825C8.39167 10.0417 8 9.1 8 8C8 6.9 8.39167 5.95833 9.175 5.175C9.95833 4.39167 10.9 4 12 4C13.1 4 14.0417 4.39167 14.825 5.175C15.6083 5.95833 16 6.9 16 8C16 9.1 15.6083 10.0417 14.825 10.825C14.0417 11.6083 13.1 12 12 12ZM4 20V17.2C4 16.6333 4.14583 16.1125 4.4375 15.6375C4.72917 15.1625 5.11667 14.8 5.6 14.55C6.63333 14.0333 7.68333 13.6458 8.75 13.3875C9.81667 13.1292 10.9 13 12 13C13.1 13 14.1833 13.1292 15.25 13.3875C16.3167 13.6458 17.3667 14.0333 18.4 14.55C18.8833 14.8 19.2708 15.1625 19.5625 15.6375C19.8542 16.1125 20 16.6333 20 17.2V20H4ZM6 18H18V17.2C18 17.0167 17.9542 16.85 17.8625 16.7C17.7708 16.55 17.65 16.4333 17.5 16.35C16.6 15.9 15.6917 15.5625 14.775 15.3375C13.8583 15.1125 12.9333 15 12 15C11.0667 15 10.1417 15.1125 9.225 15.3375C8.30833 15.5625 7.4 15.9 6.5 16.35C6.35 16.4333 6.22917 16.55 6.1375 16.7C6.04583 16.85 6 17.0167 6 17.2V18ZM12 10C12.55 10 13.0208 9.80417 13.4125 9.4125C13.8042 9.02083 14 8.55 14 8C14 7.45 13.8042 6.97917 13.4125 6.5875C13.0208 6.19583 12.55 6 12 6C11.45 6 10.9792 6.19583 10.5875 6.5875C10.1958 6.97917 10 7.45 10 8C10 8.55 10.1958 9.02083 10.5875 9.4125C10.9792 9.80417 11.45 10 12 10Z"
                      fill={
                        {
                          "type": 2,
                        }
                      }
                      propList={
                        [
                          "fill",
                        ]
                      }
                    />
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
          </View>
          <Text
            nativeID="profileName"
            style={
              {
                "color": "#FFFFFF",
                "fontFamily": "System",
                "fontSize": 27.599999999999998,
                "fontWeight": "600",
                "lineHeight": 28,
                "userSelect": "auto",
                "width": "80%",
              }
            }
            suppressHighlighting={true}
          >
            ??
          </Text>
        </View>
        <RNSVGSvgView
          align="xMidYMid"
          bbHeight={24}
          bbWidth={24}
          color="#40FB50"
          fill="none"
          focusable={false}
          height={24}
          meetOrSlice={0}
          minX={0}
          minY={0}
          strokeWidth="2"
          style={
            [
              {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              {
                "color": "#40FB50",
              },
              {
                "flex": 0,
                "height": 24,
                "width": 24,
              },
            ]
          }
          tintColor="#40FB50"
          vbHeight={20}
          vbWidth={20}
          width={24}
        >
          <RNSVGGroup
            fill={null}
            propList={
              [
                "fill",
                "strokeWidth",
              ]
            }
            strokeWidth="2"
          >
            <RNSVGPath
              d="M14.2917 10.625L9.12508 15.7917L10.0001 16.6667L16.6667 10L10.0001 3.33337L9.12508 4.20837L14.2917 9.37504H3.33341V10.625H14.2917Z"
              fill={
                {
                  "type": 2,
                }
              }
              propList={
                [
                  "fill",
                ]
              }
            />
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
      <View
        onLayout={[Function]}
        onSubmit={[Function]}
        style={
          {
            "flex": 1,
            "flexDirection": "column",
            "gap": 18,
            "justifyContent": "space-between",
          }
        }
        testID="SendForm"
      >
        <View
          style={
            {
              "flexDirection": "column",
              "gap": 24,
            }
          }
        >
          <View
            style={
              {
                "backgroundColor": "#111f22",
                "borderBottomColor": "#DE4747",
                "borderBottomLeftRadius": 16,
                "borderBottomRightRadius": 16,
                "borderBottomWidth": 1,
                "borderLeftColor": "#DE4747",
                "borderLeftWidth": 1,
                "borderRightColor": "#DE4747",
                "borderRightWidth": 1,
                "borderStyle": "solid",
                "borderTopColor": "#DE4747",
                "borderTopLeftRadius": 16,
                "borderTopRightRadius": 16,
                "borderTopWidth": 1,
                "flexDirection": "column",
                "gap": 24,
                "paddingBottom": 24,
                "paddingLeft": 24,
                "paddingRight": 24,
                "paddingTop": 24,
              }
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                  "position": "relative",
                }
              }
            >
              <View
                style={
                  {
                    "flexDirection": "column",
                    "width": "60%",
                  }
                }
              >
                <View
                  collapsable={false}
                  jestAnimatedStyle={
                    {
                      "value": {
                        "transform": [
                          {
                            "translateX": 0,
                          },
                        ],
                      },
                    }
                  }
                  style={
                    {
                      "transform": [
                        {
                          "translateX": 0,
                        },
                      ],
                    }
                  }
                >
                  <View
                    style={
                      {
                        "position": "relative",
                      }
                    }
                  >
                    <TextInput
                      aria-label="amount"
                      autoFocus={true}
                      control={
                        {
                          "_defaultValues": {
                            "amount": "0.1",
                            "note": "test",
                            "token": "0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913",
                          },
                          "_disableForm": [Function],
                          "_executeSchema": [Function],
                          "_fields": {
                            "amount": {
                              "_f": {
                                "mount": true,
                                "name": "amount",
                                "ref": {
                                  "name": "amount",
                                },
                                "value": "0.1",
                              },
                            },
                            "note": {
                              "_f": {
                                "mount": true,
                                "name": "note",
                                "ref": {
                                  "name": "note",
                                },
                                "value": "test",
                              },
                            },
                            "token": {
                              "_f": {
                                "mount": true,
                                "name": "token",
                                "ref": {
                                  "name": "token",
                                },
                                "value": "0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913",
                              },
                            },
                          },
                          "_formState": {
                            "dirtyFields": {},
                            "disabled": false,
                            "errors": {},
                            "isDirty": false,
                            "isLoading": false,
                            "isSubmitSuccessful": false,
                            "isSubmitted": false,
                            "isSubmitting": false,
                            "isValid": false,
                            "isValidating": false,
                            "submitCount": 0,
                            "touchedFields": {},
                          },
                          "_formValues": {
                            "amount": "0.1",
                            "note": "test",
                            "token": "0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913",
                          },
                          "_getDirty": [Function],
                          "_getFieldArray": [Function],
                          "_getWatch": [Function],
                          "_names": {
                            "array": Set {},
                            "focus": "",
                            "mount": Set {
                              "amount",
                              "token",
                              "note",
                            },
                            "unMount": Set {},
                            "watch": Set {
                              "amount",
                            },
                            "watchAll": false,
                          },
                          "_options": {
                            "mode": "onSubmit",
                            "reValidateMode": "onChange",
                            "shouldFocusError": true,
                          },
                          "_proxyFormState": {
                            "dirtyFields": false,
                            "disabled": true,
                            "errors": "all",
                            "isDirty": false,
                            "isSubmitting": true,
                            "isValid": true,
                            "isValidating": false,
                            "touchedFields": false,
                          },
                          "_removeUnmounted": [Function],
                          "_reset": [Function],
                          "_resetDefaultValues": [Function],
                          "_state": {
                            "action": false,
                            "mount": true,
                            "watch": false,
                          },
                          "_subjects": {
                            "array": {
                              "next": [Function],
                              "observers": [],
                              "subscribe": [Function],
                              "unsubscribe": [Function],
                            },
                            "state": {
                              "next": [Function],
                              "observers": [
                                {
                                  "next": [Function],
                                },
                                {
                                  "next": [Function],
                                },
                                {
                                  "next": [Function],
                                },
                                {
                                  "next": [Function],
                                },
                                {
                                  "next": [Function],
                                },
                              ],
                              "subscribe": [Function],
                              "unsubscribe": [Function],
                            },
                            "values": {
                              "next": [Function],
                              "observers": [
                                {
                                  "next": [Function],
                                },
                                {
                                  "next": [Function],
                                },
                                {
                                  "next": [Function],
                                },
                                {
                                  "next": [Function],
                                },
                              ],
                              "subscribe": [Function],
                              "unsubscribe": [Function],
                            },
                          },
                          "_updateDisabledField": [Function],
                          "_updateFieldArray": [Function],
                          "_updateFormState": [Function],
                          "_updateValid": [Function],
                          "getFieldState": [Function],
                          "handleSubmit": [Function],
                          "register": [Function],
                          "setError": [Function],
                          "unregister": [Function],
                        }
                      }
                      fieldsetProps={
                        {
                          "width": "60%",
                        }
                      }
                      focusVisibleStyle={{}}
                      focusable={true}
                      id=":r0:"
                      inputMode="numeric"
                      name="amount"
                      onBlur={[Function]}
                      onChangeText={[Function]}
                      onFocus={[Function]}
                      placeholder="0"
                      placeholderTextColor="#666666"
                      readOnly={false}
                      style={
                        {
                          "backgroundColor": "#111f22",
                          "borderBottomColor": "#111f22",
                          "borderBottomLeftRadius": 0,
                          "borderBottomRightRadius": 0,
                          "borderBottomWidth": 0,
                          "borderLeftColor": "#111f22",
                          "borderLeftWidth": 0,
                          "borderRightColor": "#111f22",
                          "borderRightWidth": 0,
                          "borderStyle": "solid",
                          "borderTopColor": "#111f22",
                          "borderTopLeftRadius": 0,
                          "borderTopRightRadius": 0,
                          "borderTopWidth": 0,
                          "color": "#FFFFFF",
                          "fontFamily": "System",
                          "fontSize": 66,
                          "fontWeight": "500",
                          "height": 44,
                          "minWidth": 0,
                          "paddingBottom": 1,
                          "paddingLeft": 1,
                          "paddingRight": 1,
                          "paddingTop": 1,
                          "position": "relative",
                        }
                      }
                      value="0.1"
                    />
                  </View>
                </View>
                <View
                  style={
                    {
                      "bottom": 10,
                      "gap": 7,
                      "position": "absolute",
                      "right": 18,
                    }
                  }
                />
              </View>
              <View
                style={
                  {
                    "flexDirection": "column",
                  }
                }
              >
                <View
                  collapsable={false}
                  jestAnimatedStyle={
                    {
                      "value": {
                        "transform": [
                          {
                            "translateX": 0,
                          },
                        ],
                      },
                    }
                  }
                  style={
                    {
                      "transform": [
                        {
                          "translateX": 0,
                        },
                      ],
                    }
                  }
                >
                  <View
                    aria-autocomplete="none"
                    aria-expanded={false}
                    cancelable={true}
                    disabled={false}
                    focusVisibleStyle={
                      {
                        "outlineColor": "$outlineColor",
                        "outlineStyle": "solid",
                        "outlineWidth": 2,
                      }
                    }
                    focusable={[Function]}
                    id=":r1:"
                    minPressDuration={0}
                    onBlur={[Function]}
                    onFocus={[Function]}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onPress={[Function]}
                    onPressIn={[Function]}
                    onPressOut={[Function]}
                    style={
                      {
                        "alignItems": "center",
                        "backgroundColor": "rgba(0,0,0, 0.1)",
                        "borderBottomColor": "#081619",
                        "borderBottomLeftRadius": 999,
                        "borderBottomRightRadius": 999,
                        "borderBottomWidth": 0,
                        "borderLeftColor": "#081619",
                        "borderLeftWidth": 0,
                        "borderRightColor": "#081619",
                        "borderRightWidth": 0,
                        "borderStyle": "solid",
                        "borderTopColor": "#081619",
                        "borderTopLeftRadius": 999,
                        "borderTopRightRadius": 999,
                        "borderTopWidth": 0,
                        "flexDirection": "row",
                        "flexWrap": "nowrap",
                        "justifyContent": "space-between",
                        "maxWidth": "100%",
                        "minHeight": 44,
                        "overflow": "hidden",
                        "paddingBottom": 7,
                        "paddingLeft": 7,
                        "paddingRight": 7,
                        "paddingTop": 7,
                        "width": "fit-content",
                      }
                    }
                    testID="SelectCoinTrigger"
                    type="button"
                  >
                    <View
                      style={
                        {
                          "alignItems": "center",
                          "flexDirection": "row",
                          "gap": 7,
                        }
                      }
                    >
                      <Text
                        lineBreakMode="clip"
                        numberOfLines={1}
                        pointerEvents="none"
                        style={
                          {
                            "color": "#FFFFFF",
                            "fontFamily": "System",
                            "fontSize": 19.2,
                            "fontWeight": "400",
                            "lineHeight": 21,
                            "userSelect": "none",
                          }
                        }
                        suppressHighlighting={true}
                        testID="SelectCoinValue"
                      />
                    </View>
                    <View
                      pointerEvents="none"
                      style={
                        {
                          "height": 12.600000000000001,
                          "minHeight": 12.600000000000001,
                          "minWidth": 12.600000000000001,
                          "width": 12.600000000000001,
                        }
                      }
                    />
                    <RNSVGSvgView
                      align="xMidYMid"
                      bbHeight={25.200000000000003}
                      bbWidth={25.200000000000003}
                      fill="none"
                      focusable={false}
                      height={25.200000000000003}
                      meetOrSlice={0}
                      minX={0}
                      minY={0}
                      stroke="#40FB50"
                      strokeLinecap="round"
                      strokeLinejoin="round"
                      strokeWidth="2"
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "borderWidth": 0,
                          },
                          {
                            "color": "#40FB50",
                          },
                          {
                            "flex": 0,
                            "height": 25,
                            "width": 25,
                          },
                        ]
                      }
                      tintColor="#40FB50"
                      vbHeight={24}
                      vbWidth={24}
                      width={25.200000000000003}
                    >
                      <RNSVGGroup
                        fill={null}
                        propList={
                          [
                            "fill",
                            "stroke",
                            "strokeWidth",
                            "strokeLinecap",
                            "strokeLinejoin",
                          ]
                        }
                        stroke={
                          {
                            "payload": 4282448720,
                            "type": 0,
                          }
                        }
                        strokeLinecap={1}
                        strokeLinejoin={1}
                        strokeWidth="2"
                      >
                        <RNSVGPath
                          d="m6 9 6 6 6-6"
                          fill={
                            {
                              "payload": 4278190080,
                              "type": 0,
                            }
                          }
                          propList={
                            [
                              "stroke",
                            ]
                          }
                          stroke={
                            {
                              "payload": 4282448720,
                              "type": 0,
                            }
                          }
                        />
                      </RNSVGGroup>
                    </RNSVGSvgView>
                  </View>
                </View>
              </View>
              <View
                style={
                  {
                    "backgroundColor": "#B2B2B2",
                    "bottom": -8,
                    "flexDirection": "row",
                    "height": 1,
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                  }
                }
              />
            </View>
            <View
              style={
                {
                  "alignItems": "flex-start",
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View>
                <View
                  style={
                    {
                      "flexDirection": "column",
                      "gap": 7,
                    }
                  }
                >
                  <View
                    style={
                      {
                        "flexDirection": "row",
                        "gap": 7,
                      }
                    }
                  >
                    <Text
                      style={
                        {
                          "color": "#DE4747",
                          "fontFamily": "System",
                          "fontSize": 19.2,
                          "fontWeight": "400",
                          "lineHeight": 21,
                          "userSelect": "auto",
                        }
                      }
                      suppressHighlighting={true}
                      testID="SendFormBalance"
                    >
                      Balance:
                    </Text>
                    <Text
                      style={
                        {
                          "color": "#DE4747",
                          "fontFamily": "System",
                          "fontSize": 19.2,
                          "fontWeight": "600",
                          "lineHeight": 21,
                          "userSelect": "auto",
                        }
                      }
                      suppressHighlighting={true}
                    >
                      0.2500
                    </Text>
                  </View>
                  <Text
                    style={
                      {
                        "color": "#DE4747",
                        "fontFamily": "System",
                        "fontSize": 19.2,
                        "fontWeight": "400",
                        "lineHeight": 21,
                        "userSelect": "auto",
                      }
                    }
                    suppressHighlighting={true}
                  >
                    Insufficient funds
                  </Text>
                </View>
              </View>
            </View>
          </View>
          <View
            style={
              {
                "flexDirection": "column",
                "gap": 7,
              }
            }
          >
            <View
              style={
                {
                  "flexDirection": "column",
                }
              }
            >
              <View
                collapsable={false}
                jestAnimatedStyle={
                  {
                    "value": {
                      "transform": [
                        {
                          "translateX": 0,
                        },
                      ],
                    },
                  }
                }
                style={
                  {
                    "transform": [
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <TextInput
                  control={
                    {
                      "_defaultValues": {
                        "amount": "0.1",
                        "note": "test",
                        "token": "0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913",
                      },
                      "_disableForm": [Function],
                      "_executeSchema": [Function],
                      "_fields": {
                        "amount": {
                          "_f": {
                            "mount": true,
                            "name": "amount",
                            "ref": {
                              "name": "amount",
                            },
                            "value": "0.1",
                          },
                        },
                        "note": {
                          "_f": {
                            "mount": true,
                            "name": "note",
                            "ref": {
                              "name": "note",
                            },
                            "value": "test",
                          },
                        },
                        "token": {
                          "_f": {
                            "mount": true,
                            "name": "token",
                            "ref": {
                              "name": "token",
                            },
                            "value": "0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913",
                          },
                        },
                      },
                      "_formState": {
                        "dirtyFields": {},
                        "disabled": false,
                        "errors": {},
                        "isDirty": false,
                        "isLoading": false,
                        "isSubmitSuccessful": false,
                        "isSubmitted": false,
                        "isSubmitting": false,
                        "isValid": false,
                        "isValidating": false,
                        "submitCount": 0,
                        "touchedFields": {},
                      },
                      "_formValues": {
                        "amount": "0.1",
                        "note": "test",
                        "token": "0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913",
                      },
                      "_getDirty": [Function],
                      "_getFieldArray": [Function],
                      "_getWatch": [Function],
                      "_names": {
                        "array": Set {},
                        "focus": "",
                        "mount": Set {
                          "amount",
                          "token",
                          "note",
                        },
                        "unMount": Set {},
                        "watch": Set {
                          "amount",
                        },
                        "watchAll": false,
                      },
                      "_options": {
                        "mode": "onSubmit",
                        "reValidateMode": "onChange",
                        "shouldFocusError": true,
                      },
                      "_proxyFormState": {
                        "dirtyFields": false,
                        "disabled": true,
                        "errors": "all",
                        "isDirty": false,
                        "isSubmitting": true,
                        "isValid": true,
                        "isValidating": false,
                        "touchedFields": false,
                      },
                      "_removeUnmounted": [Function],
                      "_reset": [Function],
                      "_resetDefaultValues": [Function],
                      "_state": {
                        "action": false,
                        "mount": true,
                        "watch": false,
                      },
                      "_subjects": {
                        "array": {
                          "next": [Function],
                          "observers": [],
                          "subscribe": [Function],
                          "unsubscribe": [Function],
                        },
                        "state": {
                          "next": [Function],
                          "observers": [
                            {
                              "next": [Function],
                            },
                            {
                              "next": [Function],
                            },
                            {
                              "next": [Function],
                            },
                            {
                              "next": [Function],
                            },
                            {
                              "next": [Function],
                            },
                          ],
                          "subscribe": [Function],
                          "unsubscribe": [Function],
                        },
                        "values": {
                          "next": [Function],
                          "observers": [
                            {
                              "next": [Function],
                            },
                            {
                              "next": [Function],
                            },
                            {
                              "next": [Function],
                            },
                            {
                              "next": [Function],
                            },
                          ],
                          "subscribe": [Function],
                          "unsubscribe": [Function],
                        },
                      },
                      "_updateDisabledField": [Function],
                      "_updateFieldArray": [Function],
                      "_updateFormState": [Function],
                      "_updateValid": [Function],
                      "getFieldState": [Function],
                      "handleSubmit": [Function],
                      "register": [Function],
                      "setError": [Function],
                      "unregister": [Function],
                    }
                  }
                  focusVisibleStyle={{}}
                  focusable={true}
                  iconAfter={
                    <Themed(Anonymous)
                      chromeless={true}
                      cursor="pointer"
                      icon={
                        <Memo(wrapped)
                          $theme-light={
                            {
                              "color": "$darkGrayTextField",
                            }
                          }
                          color="$primary"
                          size="$1"
                        />
                      }
                      onPress={[Function]}
                      unstyled={true}
                    />
                  }
                  id=":r5:"
                  multiline={true}
                  name="note"
                  numberOfLines={4}
                  onBlur={[Function]}
                  onChangeText={[Function]}
                  onFocus={[Function]}
                  placeholder="Add a note"
                  placeholderTextColor="#B2B2B2"
                  readOnly={false}
                  style={
                    {
                      "backgroundColor": "#111f22",
                      "borderBottomColor": "#111f22",
                      "borderBottomLeftRadius": 9,
                      "borderBottomRightRadius": 9,
                      "borderBottomWidth": 1,
                      "borderLeftColor": "#111f22",
                      "borderLeftWidth": 1,
                      "borderRightColor": "#111f22",
                      "borderRightWidth": 1,
                      "borderStyle": "solid",
                      "borderTopColor": "#111f22",
                      "borderTopLeftRadius": 9,
                      "borderTopRightRadius": 9,
                      "borderTopWidth": 1,
                      "color": "#FFFFFF",
                      "fontFamily": "System",
                      "fontSize": 19.2,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "height": "auto",
                      "lineHeight": 19,
                      "minHeight": 40,
                      "minWidth": 0,
                      "paddingBottom": 18,
                      "paddingLeft": 24,
                      "paddingRight": 60,
                      "paddingTop": 18,
                    }
                  }
                  value="test"
                />
                <View
                  style={
                    {
                      "paddingBottom": 24,
                      "paddingLeft": 24,
                      "paddingRight": 24,
                      "paddingTop": 24,
                      "position": "absolute",
                      "right": 2,
                      "top": "50%",
                      "transform": "translateY(-50%)",
                      "zIndex": 1,
                    }
                  }
                >
                  <View
                    cancelable={true}
                    disabled={false}
                    focusable={[Function]}
                    minPressDuration={0}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onPress={[Function]}
                    onPressIn={[Function]}
                    onPressOut={[Function]}
                    role="button"
                    style={
                      {
                        "backgroundColor": "transparent",
                        "borderBottomColor": "transparent",
                        "borderLeftColor": "transparent",
                        "borderRightColor": "transparent",
                        "borderTopColor": "transparent",
                        "flexDirection": "column",
                        "shadowColor": "rgb(0,0,0)",
                        "shadowOffset": {
                          "height": 0,
                          "width": 0,
                        },
                        "shadowOpacity": 0,
                        "shadowRadius": 0,
                      }
                    }
                  >
                    <RNSVGSvgView
                      align="xMidYMid"
                      bbHeight={20}
                      bbWidth={20}
                      color="#40FB50"
                      focusable={false}
                      height={20}
                      meetOrSlice={0}
                      minX={0}
                      minY={0}
                      strokeWidth="2"
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "borderWidth": 0,
                          },
                          {
                            "color": "#40FB50",
                          },
                          {
                            "flex": 0,
                            "height": 20,
                            "width": 20,
                          },
                        ]
                      }
                      tintColor="#40FB50"
                      vbHeight={32}
                      vbWidth={32}
                      width={20}
                    >
                      <RNSVGGroup
                        fill={
                          {
                            "payload": 4278190080,
                            "type": 0,
                          }
                        }
                        propList={
                          [
                            "strokeWidth",
                          ]
                        }
                        strokeWidth="2"
                      >
                        <RNSVGPath
                          d="M8.30006 25.1004L6.90005 23.7004L14.6001 16.0004L6.90005 8.30039L8.30006 6.90039L16.0001 14.6004L23.7001 6.90039L25.1001 8.30039L17.4001 16.0004L25.1001 23.7004L23.7001 25.1004L16.0001 17.4004L8.30006 25.1004Z"
                          fill={
                            {
                              "type": 2,
                            }
                          }
                          propList={
                            [
                              "fill",
                            ]
                          }
                        />
                      </RNSVGGroup>
                    </RNSVGSvgView>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={
            {
              "paddingBottom": 0,
            }
          }
        >
          <View
            style={
              {
                "flexDirection": "column-reverse",
                "gap": 18,
                "paddingBottom": 18,
                "paddingLeft": 18,
                "paddingRight": 18,
              }
            }
          >
            <View
              accessible={true}
              aria-busy={false}
              focusVisibleStyle={
                {
                  "borderColor": "$background",
                }
              }
              pointerEvents="none"
              role="button"
              style={
                {
                  "alignItems": "center",
                  "backgroundColor": "#40FB50",
                  "borderBottomColor": "transparent",
                  "borderBottomLeftRadius": 9,
                  "borderBottomRightRadius": 9,
                  "borderBottomWidth": 1,
                  "borderLeftColor": "transparent",
                  "borderLeftWidth": 1,
                  "borderRightColor": "transparent",
                  "borderRightWidth": 1,
                  "borderStyle": "solid",
                  "borderTopColor": "transparent",
                  "borderTopLeftRadius": 9,
                  "borderTopRightRadius": 9,
                  "borderTopWidth": 1,
                  "flexDirection": "row",
                  "flexWrap": "nowrap",
                  "height": 44,
                  "justifyContent": "center",
                  "opacity": 0.5,
                  "paddingBottom": 24,
                  "paddingLeft": 18,
                  "paddingRight": 18,
                  "paddingTop": 24,
                }
              }
              testID="SubmitButton"
            >
              <Text
                lineBreakMode="clip"
                numberOfLines={1}
                style={
                  {
                    "color": "#12643F",
                    "flexGrow": 0,
                    "flexShrink": 1,
                    "fontFamily": "System",
                    "fontSize": 16.8,
                    "fontWeight": "400",
                    "lineHeight": 19,
                    "userSelect": "none",
                  }
                }
                suppressHighlighting={true}
              >
                <Text
                  lineBreakMode="clip"
                  numberOfLines={1}
                  style={
                    {
                      "color": "#12643F",
                      "flexGrow": 0,
                      "flexShrink": 1,
                      "fontFamily": "System",
                      "fontSize": 16.8,
                      "fontWeight": "600",
                      "lineHeight": 19,
                      "userSelect": "none",
                    }
                  }
                  suppressHighlighting={true}
                >
                  CONTINUE
                </Text>
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>,
  <View
    pointerEvents="box-none"
    style={
      {
        "bottom": 0,
        "flexDirection": "column",
        "left": 0,
        "maxWidth": "100%",
        "position": "absolute",
        "right": 0,
        "top": 0,
        "zIndex": 100001,
      }
    }
  >
    <View
      onLayout={[Function]}
      style={
        {
          "bottom": 0,
          "left": 0,
          "opacity": 0,
          "pointerEvents": "none",
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    />
    <View
      animation="quick"
      collapsable={false}
      disableClassName={true}
      forwardedRef={[Function]}
      jestAnimatedStyle={
        {
          "value": {
            "transform": [
              {
                "translateY": 10000.1,
              },
            ],
          },
        }
      }
      onLayout={[Function]}
      style={
        {
          "height": undefined,
          "minHeight": undefined,
          "opacity": 0,
          "pointerEvents": "none",
          "position": "absolute",
          "transform": [
            {
              "translateY": 10000.1,
            },
          ],
          "width": "100%",
          "zIndex": 100001,
        }
      }
    >
      <View
        pointerEvents="none"
        style={
          {
            "backgroundColor": "#111f22",
            "borderTopLeftRadius": 16,
            "borderTopRightRadius": 16,
            "flex": 0,
            "flexDirection": "column",
            "maxHeight": "100%",
            "maxWidth": 738,
            "overflow": "hidden",
            "width": "100%",
          }
        }
      >
        <View
          cancelable={true}
          disabled={false}
          focusable={true}
          minPressDuration={0}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onPress={[Function]}
          onPressIn={[Function]}
          onPressOut={[Function]}
          pointerEvents="none"
          style={
            {
              "backgroundColor": "transparent",
              "borderBottomLeftRadius": 100,
              "borderBottomRightRadius": 100,
              "borderTopLeftRadius": 100,
              "borderTopRightRadius": 100,
              "flex": 1,
              "flexDirection": "row",
              "height": 10,
              "justifyContent": "space-between",
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "opacity": 1,
              "paddingBottom": 24,
              "paddingTop": 24,
              "zIndex": 10,
            }
          }
        >
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
                "paddingLeft": 18,
                "paddingRight": 18,
                "width": "100%",
              }
            }
          >
            <Text
              style={
                {
                  "color": "#FFFFFF",
                  "fontFamily": "System",
                  "fontSize": 19.2,
                  "fontWeight": "700",
                  "lineHeight": 19,
                  "userSelect": "auto",
                }
              }
              suppressHighlighting={true}
            >
              Select Currency
            </Text>
            <View
              cancelable={true}
              disabled={false}
              focusable={[Function]}
              minPressDuration={0}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onPress={[Function]}
              onPressIn={[Function]}
              onPressOut={[Function]}
              role="button"
              style={
                {
                  "backgroundColor": "transparent",
                  "borderBottomColor": "transparent",
                  "borderLeftColor": "transparent",
                  "borderRightColor": "transparent",
                  "borderTopColor": "transparent",
                  "flexDirection": "column",
                  "shadowColor": "rgb(0,0,0)",
                  "shadowOffset": {
                    "height": 0,
                    "width": 0,
                  },
                  "shadowOpacity": 0,
                  "shadowRadius": 0,
                }
              }
            >
              <RNSVGSvgView
                align="xMidYMid"
                bbHeight={24}
                bbWidth={24}
                color="#FFFFFF"
                focusable={false}
                height={24}
                meetOrSlice={0}
                minX={0}
                minY={0}
                strokeWidth="2"
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    {
                      "color": "#FFFFFF",
                    },
                    {
                      "flex": 0,
                      "height": 24,
                      "width": 24,
                    },
                  ]
                }
                tintColor="#FFFFFF"
                vbHeight={32}
                vbWidth={32}
                width={24}
              >
                <RNSVGGroup
                  fill={
                    {
                      "payload": 4278190080,
                      "type": 0,
                    }
                  }
                  propList={
                    [
                      "strokeWidth",
                    ]
                  }
                  strokeWidth="2"
                >
                  <RNSVGPath
                    d="M8.30006 25.1004L6.90005 23.7004L14.6001 16.0004L6.90005 8.30039L8.30006 6.90039L16.0001 14.6004L23.7001 6.90039L25.1001 8.30039L17.4001 16.0004L25.1001 23.7004L23.7001 25.1004L16.0001 17.4004L8.30006 25.1004Z"
                    fill={
                      {
                        "type": 2,
                      }
                    }
                    propList={
                      [
                        "fill",
                      ]
                    }
                  />
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
        <RCTScrollView
          onMoveShouldSetResponder={[Function]}
          onResponderRelease={[Function]}
          onScroll={[Function]}
          onStartShouldSetResponder={[Function]}
          scrollEnabled={true}
          scrollEventThrottle={8}
          style={
            {
              "flex": 1,
            }
          }
        >
          <View>
            <View
              overflowY="hidden"
              style={
                {
                  "alignSelf": "flex-start",
                  "borderBottomColor": "transparent",
                  "borderLeftColor": "transparent",
                  "borderRightColor": "transparent",
                  "borderTopColor": "transparent",
                  "flex": 1,
                  "flexDirection": "row",
                  "width": "100%",
                }
              }
            >
              <View
                aria-labelledby=":r6:"
                disabled={false}
                role="group"
                style={
                  {
                    "flexDirection": "column",
                    "paddingBottom": 7,
                    "paddingLeft": 7,
                    "paddingRight": 7,
                    "paddingTop": 7,
                    "width": "100%",
                  }
                }
              >
                <View
                  aria-labelledby=":r7:"
                  aria-selected={true}
                  cancelable={true}
                  disabled={false}
                  focusVisibleStyle={
                    {
                      "outlineColor": "$outlineColor",
                      "outlineStyle": "solid",
                      "outlineWidth": 1,
                    }
                  }
                  focusable={true}
                  minPressDuration={0}
                  onBlur={[Function]}
                  onFocus={[Function]}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onPress={[Function]}
                  onPressIn={[Function]}
                  onPressOut={[Function]}
                  style={
                    {
                      "alignItems": "center",
                      "backgroundColor": "transparent",
                      "borderBottomColor": "#081619",
                      "borderBottomLeftRadius": 9,
                      "borderBottomRightRadius": 9,
                      "borderBottomWidth": 0,
                      "borderLeftColor": "#081619",
                      "borderLeftWidth": 0,
                      "borderRightColor": "#081619",
                      "borderRightWidth": 0,
                      "borderStyle": "solid",
                      "borderTopColor": "#081619",
                      "borderTopLeftRadius": 9,
                      "borderTopRightRadius": 9,
                      "borderTopWidth": 0,
                      "flex": 1,
                      "flexDirection": "row",
                      "flexWrap": "nowrap",
                      "justifyContent": "space-between",
                      "maxWidth": "100%",
                      "minHeight": 44,
                      "overflow": "hidden",
                      "paddingBottom": 10,
                      "paddingLeft": 18,
                      "paddingRight": 18,
                      "paddingTop": 10,
                      "width": "100%",
                    }
                  }
                  tabIndex={-1}
                >
                  <View
                    style={
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "gap": 7,
                        "justifyContent": "space-between",
                      }
                    }
                  >
                    <Text
                      id=":r7:"
                      lineBreakMode="clip"
                      numberOfLines={1}
                      style={
                        {
                          "color": "#FFFFFF",
                          "fontFamily": "System",
                          "fontSize": 19.2,
                          "fontWeight": "500",
                          "lineHeight": 19,
                          "textTransform": "uppercase",
                          "userSelect": "none",
                        }
                      }
                      suppressHighlighting={true}
                    />
                    <RNSVGSvgView
                      align="xMidYMid"
                      bbHeight={24}
                      bbWidth={24}
                      fill="none"
                      focusable={false}
                      height={24}
                      meetOrSlice={0}
                      minX={0}
                      minY={0}
                      stroke="#FFFFFF"
                      strokeLinecap="round"
                      strokeLinejoin="round"
                      strokeWidth="2"
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "borderWidth": 0,
                          },
                          {
                            "color": "#FFFFFF",
                          },
                          {
                            "flex": 0,
                            "height": 24,
                            "width": 24,
                          },
                        ]
                      }
                      tintColor="#FFFFFF"
                      vbHeight={24}
                      vbWidth={24}
                      width={24}
                    >
                      <RNSVGGroup
                        fill={null}
                        propList={
                          [
                            "fill",
                            "stroke",
                            "strokeWidth",
                            "strokeLinecap",
                            "strokeLinejoin",
                          ]
                        }
                        stroke={
                          {
                            "payload": 4294967295,
                            "type": 0,
                          }
                        }
                        strokeLinecap={1}
                        strokeLinejoin={1}
                        strokeWidth="2"
                      >
                        <RNSVGPath
                          d="M22 11.08V12a10 10 0 1 1-5.93-9.14"
                          fill={
                            {
                              "payload": 4278190080,
                              "type": 0,
                            }
                          }
                          propList={
                            [
                              "stroke",
                            ]
                          }
                          stroke={
                            {
                              "payload": 4294967295,
                              "type": 0,
                            }
                          }
                        />
                        <RNSVGPath
                          d="m9 11 3 3L22 4"
                          fill={
                            {
                              "payload": 4278190080,
                              "type": 0,
                            }
                          }
                          propList={
                            [
                              "stroke",
                            ]
                          }
                          stroke={
                            {
                              "payload": 4294967295,
                              "type": 0,
                            }
                          }
                        />
                      </RNSVGGroup>
                    </RNSVGSvgView>
                  </View>
                  <View
                    style={
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "gap": 16,
                      }
                    }
                  >
                    <Text
                      style={
                        {
                          "color": "#FFFFFF",
                          "fontFamily": "System",
                          "fontSize": 24,
                          "fontWeight": "500",
                          "lineHeight": 19,
                          "userSelect": "auto",
                        }
                      }
                      suppressHighlighting={true}
                    >
                      0
                    </Text>
                  </View>
                </View>
                <View
                  pointerEvents="none"
                  style={
                    {
                      "height": 0,
                      "minHeight": 0,
                      "minWidth": 0,
                      "width": 0,
                    }
                  }
                />
                <View
                  aria-labelledby=":r8:"
                  aria-selected={false}
                  cancelable={true}
                  disabled={false}
                  focusVisibleStyle={
                    {
                      "outlineColor": "$outlineColor",
                      "outlineStyle": "solid",
                      "outlineWidth": 1,
                    }
                  }
                  focusable={true}
                  minPressDuration={0}
                  onBlur={[Function]}
                  onFocus={[Function]}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onPress={[Function]}
                  onPressIn={[Function]}
                  onPressOut={[Function]}
                  style={
                    {
                      "alignItems": "center",
                      "backgroundColor": "transparent",
                      "borderBottomColor": "#081619",
                      "borderBottomLeftRadius": 9,
                      "borderBottomRightRadius": 9,
                      "borderBottomWidth": 0,
                      "borderLeftColor": "#081619",
                      "borderLeftWidth": 0,
                      "borderRightColor": "#081619",
                      "borderRightWidth": 0,
                      "borderStyle": "solid",
                      "borderTopColor": "#081619",
                      "borderTopLeftRadius": 9,
                      "borderTopRightRadius": 9,
                      "borderTopWidth": 0,
                      "flex": 1,
                      "flexDirection": "row",
                      "flexWrap": "nowrap",
                      "justifyContent": "space-between",
                      "maxWidth": "100%",
                      "minHeight": 44,
                      "overflow": "hidden",
                      "paddingBottom": 10,
                      "paddingLeft": 18,
                      "paddingRight": 18,
                      "paddingTop": 10,
                      "width": "100%",
                    }
                  }
                  tabIndex={-1}
                >
                  <View
                    style={
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "gap": 7,
                        "justifyContent": "space-between",
                      }
                    }
                  >
                    <Text
                      id=":r8:"
                      lineBreakMode="clip"
                      numberOfLines={1}
                      style={
                        {
                          "color": "#FFFFFF",
                          "fontFamily": "System",
                          "fontSize": 19.2,
                          "fontWeight": "500",
                          "lineHeight": 19,
                          "textTransform": "uppercase",
                          "userSelect": "none",
                        }
                      }
                      suppressHighlighting={true}
                    />
                  </View>
                  <View
                    style={
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "gap": 16,
                      }
                    }
                  >
                    <Text
                      style={
                        {
                          "color": "#FFFFFF",
                          "fontFamily": "System",
                          "fontSize": 24,
                          "fontWeight": "500",
                          "lineHeight": 19,
                          "userSelect": "auto",
                        }
                      }
                      suppressHighlighting={true}
                    >
                      0
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RCTScrollView>
      </View>
      <View
        style={
          {
            "backgroundColor": "#111f22",
            "borderBottomLeftRadius": 0,
            "borderBottomRightRadius": 0,
            "borderBottomWidth": 0,
            "borderLeftWidth": 0,
            "borderRightWidth": 0,
            "borderStyle": "solid",
            "borderTopLeftRadius": 0,
            "borderTopRightRadius": 0,
            "borderTopWidth": 0,
            "bottom": "-100%",
            "flex": 1,
            "flexDirection": "column",
            "height": 0,
            "left": 0,
            "maxHeight": "100%",
            "maxWidth": 738,
            "overflow": "hidden",
            "position": "absolute",
            "right": 0,
            "shadowColor": undefined,
            "shadowOffset": {
              "height": 0,
              "width": 0,
            },
            "shadowOpacity": 0,
            "shadowRadius": 0,
            "width": "100%",
            "zIndex": -1,
          }
        }
      />
    </View>
  </View>,
]
`;
