// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SendScreen should render /send check when no send account: render 1`] = `
<View
  style={
    {
      "flexDirection": "column",
      "gap": 18,
      "marginBottom": 18,
      "marginLeft": "auto",
      "marginRight": "auto",
      "maxWidth": 600,
      "width": "100%",
    }
  }
  testID="NoSendAccount"
>
  <View
    style={
      {
        "flexDirection": "column",
        "gap": 10,
        "width": "100%",
      }
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "flexDirection": "row",
          "gap": 13,
          "justifyContent": "space-between",
        }
      }
    >
      <Text
        cancelable={true}
        disabled={false}
        focusable={true}
        id=":r3:"
        minPressDuration={0}
        onBlur={[Function]}
        onFocus={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onPress={[Function]}
        onPressIn={[Function]}
        onPressOut={[Function]}
        style={
          {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "color": "hsl(0, 0%, 78.0%)",
            "display": "flex",
            "fontFamily": "System",
            "fontSize": 19.2,
            "fontWeight": "500",
            "lineHeight": 44,
            "textTransform": "uppercase",
          }
        }
        suppressHighlighting={true}
        userSelect="none"
      >
        TO
      </Text>
      <View
        accessibilityRole="button"
        cancelable={true}
        disabled={false}
        focusVisibleStyle={{}}
        focusable={[Function]}
        minPressDuration={0}
        onBlur={[Function]}
        onFocus={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onPress={[Function]}
        onPressIn={[Function]}
        onPressOut={[Function]}
        style={
          {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "borderBottomColor": "transparent",
            "borderBottomLeftRadius": 16,
            "borderBottomRightRadius": 16,
            "borderBottomWidth": 1,
            "borderLeftColor": "transparent",
            "borderLeftWidth": 1,
            "borderRightColor": "transparent",
            "borderRightWidth": 1,
            "borderStyle": "solid",
            "borderTopColor": "transparent",
            "borderTopLeftRadius": 16,
            "borderTopRightRadius": 16,
            "borderTopWidth": 1,
            "flexDirection": "row",
            "flexWrap": "nowrap",
            "height": 44,
            "justifyContent": "center",
            "paddingLeft": 18,
            "paddingRight": 18,
            "shadowColor": "rgb(0,0,0)",
            "shadowOffset": {
              "height": 0,
              "width": 0,
            },
            "shadowOpacity": 0,
            "shadowRadius": 0,
          }
        }
      >
        <Text
          lineBreakMode="clip"
          numberOfLines={1}
          style={
            {
              "color": "#40FB50",
              "flexGrow": 0,
              "flexShrink": 1,
              "fontFamily": "System",
              "fontSize": 16.8,
              "fontWeight": "400",
              "lineHeight": 19,
            }
          }
          suppressHighlighting={true}
          userSelect="none"
        >
          edit
        </Text>
      </View>
    </View>
    <View
      style={
        {
          "alignItems": "center",
          "backgroundColor": "#1C2A2D",
          "borderBottomLeftRadius": 7,
          "borderBottomRightRadius": 7,
          "borderTopLeftRadius": 7,
          "borderTopRightRadius": 7,
          "flex": 1,
          "flexDirection": "row",
          "gap": 13,
          "paddingBottom": 7,
          "paddingLeft": 7,
          "paddingRight": 7,
          "paddingTop": 7,
        }
      }
    >
      <View
        style={
          {
            "alignItems": "center",
            "borderBottomLeftRadius": 7,
            "borderBottomRightRadius": 7,
            "borderTopLeftRadius": 7,
            "borderTopRightRadius": 7,
            "flexDirection": "column",
            "height": 48,
            "justifyContent": "center",
            "maxHeight": 48,
            "maxWidth": 48,
            "minHeight": 48,
            "minWidth": 48,
            "overflow": "hidden",
            "position": "relative",
            "width": 48,
          }
        }
      >
        <View
          style={
            {
              "bottom": 0,
              "flexDirection": "column",
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "zIndex": 1,
            }
          }
        >
          <Image
            fullscreen={true}
            onError={[Function]}
            onLoad={[Function]}
            source={
              {
                "uri": "https://avatars.githubusercontent.com/u/123",
              }
            }
            style={
              {
                "height": 48,
                "width": 48,
              }
            }
          />
        </View>
        <View
          style={
            {
              "bottom": 0,
              "flexDirection": "column",
              "justifyContent": "center",
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "zIndex": 0,
            }
          }
        >
          <RNSVGSvgView
            align="xMidYMid"
            bbHeight="48"
            bbWidth="48"
            color="#86AE80"
            fill="none"
            focusable={false}
            height={48}
            meetOrSlice={0}
            minX={0}
            minY={0}
            strokeWidth="2"
            style={
              [
                {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                {
                  "color": "#86AE80",
                },
                {
                  "flex": 0,
                  "height": 48,
                  "width": 48,
                },
              ]
            }
            tintColor="#86AE80"
            vbHeight={20}
            vbWidth={20}
            width={48}
          >
            <RNSVGGroup
              fill={null}
              propList={
                [
                  "fill",
                  "strokeWidth",
                ]
              }
              strokeWidth="2"
            >
              <RNSVGPath
                d="M9.99967 9.97913C9.08301 9.97913 8.33301 9.68746 7.74967 9.10413C7.16634 8.52079 6.87467 7.77079 6.87467 6.85413C6.87467 5.93746 7.16634 5.18746 7.74967 4.60413C8.33301 4.02079 9.08301 3.72913 9.99967 3.72913C10.9163 3.72913 11.6663 4.02079 12.2497 4.60413C12.833 5.18746 13.1247 5.93746 13.1247 6.85413C13.1247 7.77079 12.833 8.52079 12.2497 9.10413C11.6663 9.68746 10.9163 9.97913 9.99967 9.97913ZM3.33301 16.6666V14.7083C3.33301 14.1805 3.46495 13.7291 3.72884 13.3541C3.99273 12.9791 4.33301 12.6944 4.74967 12.5C5.68023 12.0833 6.57259 11.7708 7.42676 11.5625C8.28092 11.3541 9.13856 11.25 9.99967 11.25C10.8608 11.25 11.715 11.3576 12.5622 11.5729C13.4094 11.7882 14.2977 12.0985 15.2272 12.504C15.6619 12.7002 16.0105 12.9847 16.2728 13.3575C16.5352 13.7302 16.6663 14.1805 16.6663 14.7083V16.6666H3.33301ZM4.58301 15.4166H15.4163V14.7083C15.4163 14.4861 15.3504 14.2743 15.2184 14.0729C15.0865 13.8715 14.9233 13.7222 14.7288 13.625C13.84 13.1944 13.0275 12.8993 12.2913 12.7395C11.5552 12.5798 10.7913 12.5 9.99967 12.5C9.20801 12.5 8.43717 12.5798 7.68717 12.7395C6.93717 12.8993 6.12467 13.1944 5.24967 13.625C5.05523 13.7222 4.89551 13.8715 4.77051 14.0729C4.64551 14.2743 4.58301 14.4861 4.58301 14.7083V15.4166ZM9.99967 8.72913C10.5413 8.72913 10.9893 8.55204 11.3434 8.19788C11.6976 7.84371 11.8747 7.39579 11.8747 6.85413C11.8747 6.31246 11.6976 5.86454 11.3434 5.51038C10.9893 5.15621 10.5413 4.97913 9.99967 4.97913C9.45801 4.97913 9.01009 5.15621 8.65592 5.51038C8.30176 5.86454 8.12467 6.31246 8.12467 6.85413C8.12467 7.39579 8.30176 7.84371 8.65592 8.19788C9.01009 8.55204 9.45801 8.72913 9.99967 8.72913Z"
                fill={
                  {
                    "type": 2,
                  }
                }
                propList={
                  [
                    "fill",
                  ]
                }
              />
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
      </View>
      <View
        style={
          {
            "flexDirection": "column",
            "gap": 4,
          }
        }
      >
        <Text
          selectable={true}
          style={
            {
              "color": "#FFFFFF",
              "fontFamily": "System",
              "fontSize": 16.8,
              "fontWeight": "500",
              "lineHeight": 19,
            }
          }
          suppressHighlighting={true}
        >
          test
        </Text>
        <Text
          selectable={true}
          style={
            {
              "color": "#FFFFFF",
              "fontFamily": "System",
              "fontSize": 16.8,
              "fontWeight": "400",
              "lineHeight": 16,
            }
          }
          suppressHighlighting={true}
        >
          /test
        </Text>
      </View>
    </View>
  </View>
  <Text
    accessibilityRole="header"
    selectable={true}
    style={
      {
        "color": "#86AE80",
        "fontFamily": "System",
        "fontSize": 20,
        "fontWeight": "700",
        "lineHeight": 24,
        "marginBottom": 0,
        "marginLeft": 0,
        "marginRight": 0,
        "marginTop": 0,
        "textTransform": "none",
      }
    }
    suppressHighlighting={true}
  >
    No send account
  </Text>
  <Text
    accessibilityRole="link"
    cancelable={true}
    disabled={false}
    focusable={true}
    minPressDuration={0}
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
    onPress={[Function]}
    onPressIn={[Function]}
    onPressOut={[Function]}
    style={
      {
        "color": "#FFFFFF",
        "fontFamily": "System",
        "fontSize": 16.8,
        "fontWeight": "400",
        "lineHeight": 19,
        "textDecorationLine": "none",
      }
    }
    suppressHighlighting={true}
    testID="NoSendAccountLink"
  >
    <Text
      style={
        {
          "color": "#FFFFFF",
          "display": "flex",
          "fontFamily": "System",
          "fontWeight": "bold",
        }
      }
      suppressHighlighting={true}
    >
      /test
    </Text>
    <Text
      style={
        {
          "color": "#FFFFFF",
          "display": "flex",
          "fontFamily": "System",
        }
      }
      suppressHighlighting={true}
    >
       
      has no send account! Ask them to create one or write a /send Check.
    </Text>
  </Text>
  <View
    accessibilityRole="button"
    cancelable={true}
    disabled={false}
    focusVisibleStyle={{}}
    focusable={[Function]}
    minPressDuration={0}
    onBlur={[Function]}
    onFocus={[Function]}
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
    onPress={[Function]}
    onPressIn={[Function]}
    onPressOut={[Function]}
    style={
      {
        "alignItems": "center",
        "backgroundColor": "#111f22",
        "borderBottomColor": "transparent",
        "borderBottomLeftRadius": 16,
        "borderBottomRightRadius": 16,
        "borderBottomWidth": 1,
        "borderLeftColor": "transparent",
        "borderLeftWidth": 1,
        "borderRightColor": "transparent",
        "borderRightWidth": 1,
        "borderStyle": "solid",
        "borderTopColor": "transparent",
        "borderTopLeftRadius": 16,
        "borderTopRightRadius": 16,
        "borderTopWidth": 1,
        "flexDirection": "row",
        "flexWrap": "nowrap",
        "height": 44,
        "justifyContent": "center",
        "marginLeft": "auto",
        "marginRight": "auto",
        "maxWidth": 284,
        "minWidth": 224,
        "paddingLeft": 18,
        "paddingRight": 18,
      }
    }
  >
    <Text
      lineBreakMode="clip"
      numberOfLines={1}
      style={
        {
          "color": "#FFFFFF",
          "flexGrow": 0,
          "flexShrink": 1,
          "fontFamily": "System",
          "fontSize": 16.8,
          "fontWeight": "400",
          "lineHeight": 19,
        }
      }
      suppressHighlighting={true}
      userSelect="none"
    >
      Write /send Check
    </Text>
  </View>
</View>
`;

exports[`SendScreen should render with search when on /send and no recipient in params: render 1`] = `
<View
  style={
    {
      "flex": 1,
      "flexDirection": "column",
      "gap": 32,
      "paddingBottom": 18,
      "width": "100%",
    }
  }
>
  <View
    style={
      {
        "flexDirection": "column",
        "gap": 24,
        "width": "100%",
      }
    }
  >
    <Text
      accessibilityRole="header"
      selectable={true}
      style={
        {
          "color": "hsl(0, 0%, 43.5%)",
          "fontFamily": "System",
          "fontSize": 19.2,
          "fontWeight": "400",
          "lineHeight": 21,
          "marginBottom": 0,
          "marginLeft": 0,
          "marginRight": 0,
          "marginTop": 0,
        }
      }
      suppressHighlighting={true}
    >
      SEARCH BY
    </Text>
    <View
      style={
        {
          "position": "relative",
        }
      }
      testID="sendSearchContainer"
    >
      <View
        onLayout={[Function]}
        onSubmit={[Function]}
        style={
          {
            "alignSelf": "center",
            "flex": 1,
            "flexDirection": "column",
            "gap": 18,
            "justifyContent": "space-between",
            "width": "100%",
          }
        }
      >
        <View
          style={
            {
              "flexDirection": "column",
            }
          }
        >
          <View
            animatedStyle={
              {
                "value": {
                  "transform": [
                    {
                      "translateX": 0,
                    },
                  ],
                },
              }
            }
            collapsable={false}
            style={
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              }
            }
          >
            <TextInput
              accessibilityLabel="query"
              accessibilityRole="search"
              control={
                {
                  "_defaultValues": {
                    "query": "",
                  },
                  "_disableForm": [Function],
                  "_executeSchema": [Function],
                  "_fields": {
                    "query": {
                      "_f": {
                        "mount": true,
                        "name": "query",
                        "ref": {
                          "name": "query",
                        },
                        "value": "",
                      },
                    },
                  },
                  "_formState": {
                    "dirtyFields": {},
                    "disabled": false,
                    "errors": {},
                    "isDirty": false,
                    "isLoading": false,
                    "isSubmitSuccessful": false,
                    "isSubmitted": false,
                    "isSubmitting": false,
                    "isValid": false,
                    "isValidating": false,
                    "submitCount": 0,
                    "touchedFields": {},
                  },
                  "_formValues": {
                    "query": "",
                  },
                  "_getDirty": [Function],
                  "_getFieldArray": [Function],
                  "_getWatch": [Function],
                  "_names": {
                    "array": Set {},
                    "focus": "",
                    "mount": Set {
                      "query",
                    },
                    "unMount": Set {},
                    "watch": Set {
                      "query",
                    },
                    "watchAll": false,
                  },
                  "_options": {
                    "mode": "onSubmit",
                    "reValidateMode": "onChange",
                    "shouldFocusError": true,
                  },
                  "_proxyFormState": {
                    "dirtyFields": false,
                    "disabled": true,
                    "errors": true,
                    "isDirty": false,
                    "isSubmitting": true,
                    "isValid": true,
                    "isValidating": false,
                    "touchedFields": false,
                  },
                  "_removeUnmounted": [Function],
                  "_reset": [Function],
                  "_resetDefaultValues": [Function],
                  "_state": {
                    "action": false,
                    "mount": true,
                    "watch": false,
                  },
                  "_subjects": {
                    "array": {
                      "next": [Function],
                      "observers": [],
                      "subscribe": [Function],
                      "unsubscribe": [Function],
                    },
                    "state": {
                      "next": [Function],
                      "observers": [
                        {
                          "next": [Function],
                        },
                        {
                          "next": [Function],
                        },
                      ],
                      "subscribe": [Function],
                      "unsubscribe": [Function],
                    },
                    "values": {
                      "next": [Function],
                      "observers": [
                        {
                          "next": [Function],
                        },
                      ],
                      "subscribe": [Function],
                      "unsubscribe": [Function],
                    },
                  },
                  "_updateDisabledField": [Function],
                  "_updateFieldArray": [Function],
                  "_updateFormState": [Function],
                  "_updateValid": [Function],
                  "getFieldState": [Function],
                  "handleSubmit": [Function],
                  "register": [Function],
                  "setError": [Function],
                  "unregister": [Function],
                }
              }
              focusVisibleStyle={{}}
              focusable={true}
              id=":r0:"
              name="query"
              onBlur={[Function]}
              onChangeText={[Function]}
              onFocus={[Function]}
              placeholder="Sendtag, Phone, Send ID"
              placeholderTextColor="#081619"
              readOnly={false}
              style={
                {
                  "backgroundColor": "#111f22",
                  "borderBottomColor": "#111f22",
                  "borderBottomLeftRadius": 9,
                  "borderBottomRightRadius": 9,
                  "borderBottomWidth": 0,
                  "borderLeftColor": "#111f22",
                  "borderLeftWidth": 0,
                  "borderRightColor": "#111f22",
                  "borderRightWidth": 0,
                  "borderStyle": "solid",
                  "borderTopColor": "#111f22",
                  "borderTopLeftRadius": 9,
                  "borderTopRightRadius": 9,
                  "borderTopWidth": 0,
                  "color": "#FFFFFF",
                  "fontFamily": "System",
                  "fontSize": 19.2,
                  "fontStyle": "italic",
                  "fontWeight": "normal",
                  "height": 44,
                  "minWidth": 0,
                  "paddingLeft": 16,
                  "paddingRight": 40,
                  "position": "relative",
                }
              }
              value=""
            />
          </View>
          <View
            style={
              {
                "bottom": 10,
                "gap": 7,
                "position": "absolute",
                "right": 18,
              }
            }
          />
        </View>
      </View>
      <View
        accessibilityLabel="Clear input."
        accessibilityRole="button"
        cancelable={true}
        disabled={false}
        focusVisibleStyle={{}}
        focusable={[Function]}
        minPressDuration={0}
        onBlur={[Function]}
        onFocus={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onPress={[Function]}
        onPressIn={[Function]}
        onPressOut={[Function]}
        style={
          {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "borderBottomColor": "transparent",
            "borderBottomLeftRadius": 0,
            "borderBottomRightRadius": 9,
            "borderBottomWidth": 1,
            "borderLeftColor": "transparent",
            "borderLeftWidth": 1,
            "borderRightColor": "transparent",
            "borderRightWidth": 1,
            "borderStyle": "solid",
            "borderTopColor": "transparent",
            "borderTopLeftRadius": 0,
            "borderTopRightRadius": 9,
            "borderTopWidth": 1,
            "flexDirection": "row",
            "flexWrap": "nowrap",
            "height": 44,
            "justifyContent": "center",
            "paddingBottom": 0,
            "paddingLeft": 4,
            "paddingRight": 4,
            "paddingTop": 0,
            "position": "absolute",
            "right": "0",
            "top": "0",
          }
        }
      >
        <RNSVGSvgView
          align="xMidYMid"
          bbHeight="32"
          bbWidth="32"
          color="#FFFFFF"
          focusable={false}
          height={32}
          meetOrSlice={0}
          minX={0}
          minY={0}
          strokeWidth="2"
          style={
            [
              {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              {
                "height": 24,
                "width": 24,
              },
              {
                "flex": 0,
                "height": 32,
                "width": 32,
              },
            ]
          }
          tintColor="#FFFFFF"
          vbHeight={32}
          vbWidth={32}
          width={32}
        >
          <RNSVGGroup
            fill={
              {
                "payload": 4278190080,
                "type": 0,
              }
            }
            propList={
              [
                "strokeWidth",
              ]
            }
            strokeWidth="2"
          >
            <RNSVGPath
              d="M8.30006 25.1004L6.90005 23.7004L14.6001 16.0004L6.90005 8.30039L8.30006 6.90039L16.0001 14.6004L23.7001 6.90039L25.1001 8.30039L17.4001 16.0004L25.1001 23.7004L23.7001 25.1004L16.0001 17.4004L8.30006 25.1004Z"
              fill={
                {
                  "type": 2,
                }
              }
              propList={
                [
                  "fill",
                ]
              }
            />
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
    </View>
  </View>
</View>
`;

exports[`SendScreen should render with search when on /send and no recipient in params: search 1`] = `
<View
  style={
    {
      "flex": 1,
      "flexDirection": "column",
      "gap": 32,
      "paddingBottom": 18,
      "width": "100%",
    }
  }
>
  <View
    style={
      {
        "flexDirection": "column",
        "gap": 24,
        "width": "100%",
      }
    }
  >
    <Text
      accessibilityRole="header"
      selectable={true}
      style={
        {
          "color": "hsl(0, 0%, 43.5%)",
          "fontFamily": "System",
          "fontSize": 19.2,
          "fontWeight": "400",
          "lineHeight": 21,
          "marginBottom": 0,
          "marginLeft": 0,
          "marginRight": 0,
          "marginTop": 0,
        }
      }
      suppressHighlighting={true}
    >
      SEARCH BY
    </Text>
    <View
      style={
        {
          "position": "relative",
        }
      }
      testID="sendSearchContainer"
    >
      <View
        onLayout={[Function]}
        onSubmit={[Function]}
        style={
          {
            "alignSelf": "center",
            "flex": 1,
            "flexDirection": "column",
            "gap": 18,
            "justifyContent": "space-between",
            "width": "100%",
          }
        }
      >
        <View
          style={
            {
              "flexDirection": "column",
            }
          }
        >
          <View
            animatedStyle={
              {
                "value": {
                  "transform": [
                    {
                      "translateX": 0,
                    },
                  ],
                },
              }
            }
            collapsable={false}
            style={
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              }
            }
          >
            <TextInput
              accessibilityLabel="query"
              accessibilityRole="search"
              control={
                {
                  "_defaultValues": {
                    "query": "",
                  },
                  "_disableForm": [Function],
                  "_executeSchema": [Function],
                  "_fields": {
                    "query": {
                      "_f": {
                        "mount": true,
                        "name": "query",
                        "ref": {
                          "name": "query",
                        },
                        "value": "test",
                      },
                    },
                  },
                  "_formState": {
                    "dirtyFields": {
                      "query": true,
                    },
                    "disabled": false,
                    "errors": {},
                    "isDirty": false,
                    "isLoading": false,
                    "isSubmitSuccessful": false,
                    "isSubmitted": false,
                    "isSubmitting": false,
                    "isValid": true,
                    "isValidating": false,
                    "name": "query",
                    "submitCount": 0,
                    "touchedFields": {
                      "query": true,
                    },
                  },
                  "_formValues": {
                    "query": "test",
                  },
                  "_getDirty": [Function],
                  "_getFieldArray": [Function],
                  "_getWatch": [Function],
                  "_names": {
                    "array": Set {},
                    "focus": "",
                    "mount": Set {
                      "query",
                    },
                    "unMount": Set {},
                    "watch": Set {
                      "query",
                    },
                    "watchAll": false,
                  },
                  "_options": {
                    "mode": "onSubmit",
                    "reValidateMode": "onChange",
                    "shouldFocusError": true,
                  },
                  "_proxyFormState": {
                    "dirtyFields": false,
                    "disabled": true,
                    "errors": true,
                    "isDirty": false,
                    "isSubmitting": true,
                    "isValid": true,
                    "isValidating": false,
                    "touchedFields": false,
                  },
                  "_removeUnmounted": [Function],
                  "_reset": [Function],
                  "_resetDefaultValues": [Function],
                  "_state": {
                    "action": false,
                    "mount": true,
                    "watch": false,
                  },
                  "_subjects": {
                    "array": {
                      "next": [Function],
                      "observers": [],
                      "subscribe": [Function],
                      "unsubscribe": [Function],
                    },
                    "state": {
                      "next": [Function],
                      "observers": [
                        {
                          "next": [Function],
                        },
                        {
                          "next": [Function],
                        },
                      ],
                      "subscribe": [Function],
                      "unsubscribe": [Function],
                    },
                    "values": {
                      "next": [Function],
                      "observers": [
                        {
                          "next": [Function],
                        },
                      ],
                      "subscribe": [Function],
                      "unsubscribe": [Function],
                    },
                  },
                  "_updateDisabledField": [Function],
                  "_updateFieldArray": [Function],
                  "_updateFormState": [Function],
                  "_updateValid": [Function],
                  "getFieldState": [Function],
                  "handleSubmit": [Function],
                  "register": [Function],
                  "setError": [Function],
                  "unregister": [Function],
                }
              }
              focusVisibleStyle={{}}
              focusable={true}
              id=":r0:"
              name="query"
              onBlur={[Function]}
              onChangeText={[Function]}
              onFocus={[Function]}
              placeholder="Sendtag, Phone, Send ID"
              placeholderTextColor="#081619"
              readOnly={false}
              style={
                {
                  "backgroundColor": "#111f22",
                  "borderBottomColor": "#111f22",
                  "borderBottomLeftRadius": 9,
                  "borderBottomRightRadius": 9,
                  "borderBottomWidth": 0,
                  "borderLeftColor": "#111f22",
                  "borderLeftWidth": 0,
                  "borderRightColor": "#111f22",
                  "borderRightWidth": 0,
                  "borderStyle": "solid",
                  "borderTopColor": "#111f22",
                  "borderTopLeftRadius": 9,
                  "borderTopRightRadius": 9,
                  "borderTopWidth": 0,
                  "color": "#FFFFFF",
                  "fontFamily": "System",
                  "fontSize": 19.2,
                  "fontStyle": "normal",
                  "fontWeight": "bold",
                  "height": 44,
                  "minWidth": 0,
                  "paddingLeft": 16,
                  "paddingRight": 40,
                  "position": "relative",
                }
              }
              value="test"
            />
          </View>
          <View
            style={
              {
                "bottom": 10,
                "gap": 7,
                "position": "absolute",
                "right": 18,
              }
            }
          />
        </View>
      </View>
      <View
        accessibilityLabel="Clear input."
        accessibilityRole="button"
        cancelable={true}
        disabled={false}
        focusVisibleStyle={{}}
        focusable={[Function]}
        minPressDuration={0}
        onBlur={[Function]}
        onFocus={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onPress={[Function]}
        onPressIn={[Function]}
        onPressOut={[Function]}
        style={
          {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "borderBottomColor": "transparent",
            "borderBottomLeftRadius": 0,
            "borderBottomRightRadius": 9,
            "borderBottomWidth": 1,
            "borderLeftColor": "transparent",
            "borderLeftWidth": 1,
            "borderRightColor": "transparent",
            "borderRightWidth": 1,
            "borderStyle": "solid",
            "borderTopColor": "transparent",
            "borderTopLeftRadius": 0,
            "borderTopRightRadius": 9,
            "borderTopWidth": 1,
            "flexDirection": "row",
            "flexWrap": "nowrap",
            "height": 44,
            "justifyContent": "center",
            "paddingBottom": 0,
            "paddingLeft": 4,
            "paddingRight": 4,
            "paddingTop": 0,
            "position": "absolute",
            "right": "0",
            "top": "0",
          }
        }
      >
        <RNSVGSvgView
          align="xMidYMid"
          bbHeight="32"
          bbWidth="32"
          color="#FFFFFF"
          focusable={false}
          height={32}
          meetOrSlice={0}
          minX={0}
          minY={0}
          strokeWidth="2"
          style={
            [
              {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              {
                "height": 24,
                "width": 24,
              },
              {
                "flex": 0,
                "height": 32,
                "width": 32,
              },
            ]
          }
          tintColor="#FFFFFF"
          vbHeight={32}
          vbWidth={32}
          width={32}
        >
          <RNSVGGroup
            fill={
              {
                "payload": 4278190080,
                "type": 0,
              }
            }
            propList={
              [
                "strokeWidth",
              ]
            }
            strokeWidth="2"
          >
            <RNSVGPath
              d="M8.30006 25.1004L6.90005 23.7004L14.6001 16.0004L6.90005 8.30039L8.30006 6.90039L16.0001 14.6004L23.7001 6.90039L25.1001 8.30039L17.4001 16.0004L25.1001 23.7004L23.7001 25.1004L16.0001 17.4004L8.30006 25.1004Z"
              fill={
                {
                  "type": 2,
                }
              }
              propList={
                [
                  "fill",
                ]
              }
            />
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
    </View>
  </View>
  <RCTScrollView
    scrollEnabled={true}
    style={
      [
        {
          "gap": 32,
          "marginTop": 40,
        },
        {
          "animatedStyle": {
            "current": {},
          },
          "initial": {
            "updater": [Function],
            "value": {
              "opacity": 0,
              "transform": [
                {
                  "translateY": -10,
                },
              ],
              "width": "100%",
            },
          },
          "viewDescriptors": {
            "add": [Function],
            "remove": [Function],
            "shareableViewDescriptors": {
              "_isReanimatedSharedValue": true,
              "_value": [],
              "addListener": [Function],
              "modify": [Function],
              "removeListener": [Function],
              "value": [],
            },
          },
          "viewsRef": {
            "add": [Function],
            "items": Set {},
            "remove": [Function],
          },
        },
      ]
    }
    testID="searchResults"
  >
    <View>
      <View
        style={
          {
            "flexDirection": "column",
            "gap": 16,
          }
        }
      >
        <Text
          accessibilityRole="header"
          selectable={true}
          style={
            {
              "color": "#B3B3B3",
              "fontFamily": "System",
              "fontSize": 19.2,
              "fontWeight": "400",
              "lineHeight": 21,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "textTransform": "uppercase",
            }
          }
          suppressHighlighting={true}
        >
          tag
        </Text>
        <View
          style={
            {
              "flexDirection": "row",
              "flexWrap": "wrap",
              "gap": 24,
            }
          }
        >
          <View
            style={
              {
                "borderBottomLeftRadius": 10,
                "borderBottomRightRadius": 10,
                "borderTopLeftRadius": 10,
                "borderTopRightRadius": 10,
                "width": "100%",
              }
            }
          >
            <View
              href="/send?idType=tag&recipient=test&amount=test&sendToken=test&note=test"
              testID="MockSolitoLink"
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "gap": 18,
                  }
                }
                testID="tag-search-3665"
              >
                <View
                  style={
                    {
                      "alignItems": "center",
                      "borderBottomLeftRadius": 7,
                      "borderBottomRightRadius": 7,
                      "borderTopLeftRadius": 7,
                      "borderTopRightRadius": 7,
                      "flexDirection": "column",
                      "height": 48,
                      "justifyContent": "center",
                      "maxHeight": 48,
                      "maxWidth": 48,
                      "minHeight": 48,
                      "minWidth": 48,
                      "overflow": "hidden",
                      "position": "relative",
                      "width": 48,
                    }
                  }
                >
                  <View
                    style={
                      {
                        "bottom": 0,
                        "flexDirection": "column",
                        "left": 0,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                        "zIndex": 1,
                      }
                    }
                  >
                    <Image
                      fullscreen={true}
                      onError={[Function]}
                      onLoad={[Function]}
                      source={
                        {
                          "uri": "https://avatars.githubusercontent.com/u/123",
                        }
                      }
                      style={
                        {
                          "height": 48,
                          "width": 48,
                        }
                      }
                      testID="avatar"
                    />
                  </View>
                  <View
                    style={
                      {
                        "bottom": 0,
                        "flexDirection": "column",
                        "left": 0,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                        "zIndex": 0,
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "alignItems": "center",
                          "borderBottomLeftRadius": 7,
                          "borderBottomRightRadius": 7,
                          "borderTopLeftRadius": 7,
                          "borderTopRightRadius": 7,
                          "flexDirection": "column",
                          "height": 48,
                          "justifyContent": "center",
                          "maxHeight": 48,
                          "maxWidth": 48,
                          "minHeight": 48,
                          "minWidth": 48,
                          "overflow": "hidden",
                          "position": "relative",
                          "width": 48,
                        }
                      }
                    >
                      <View
                        style={
                          {
                            "bottom": 0,
                            "flexDirection": "column",
                            "left": 0,
                            "position": "absolute",
                            "right": 0,
                            "top": 0,
                            "zIndex": 1,
                          }
                        }
                      >
                        <Image
                          fullscreen={true}
                          onError={[Function]}
                          onLoad={[Function]}
                          source={
                            {
                              "uri": "https://ui-avatars.com/api.jpg?name=test&size=256",
                            }
                          }
                          style={
                            {
                              "height": 48,
                              "width": 48,
                            }
                          }
                        />
                      </View>
                      <View
                        style={
                          {
                            "bottom": 0,
                            "flexDirection": "column",
                            "left": 0,
                            "position": "absolute",
                            "right": 0,
                            "top": 0,
                            "zIndex": 0,
                          }
                        }
                      >
                        <Text
                          selectable={true}
                          style={
                            {
                              "color": "#FFFFFF",
                              "fontFamily": "System",
                              "fontSize": 16.8,
                              "fontWeight": "400",
                              "lineHeight": 19,
                            }
                          }
                          suppressHighlighting={true}
                        >
                          ??
                        </Text>
                      </View>
                    </View>
                  </View>
                </View>
                <View
                  style={
                    {
                      "flexDirection": "column",
                      "gap": 2,
                    }
                  }
                >
                  <Text
                    style={
                      {
                        "color": "#B3B3B3",
                        "fontFamily": "System",
                        "fontSize": 24,
                        "fontWeight": "300",
                      }
                    }
                    suppressHighlighting={true}
                  >
                    <Text
                      style={
                        {
                          "color": "#FFFFFF",
                          "fontFamily": "System",
                          "fontWeight": "500",
                        }
                      }
                      suppressHighlighting={true}
                    >
                      test
                    </Text>
                  </Text>
                  <Text
                    style={
                      {
                        "color": "#FFFFFF",
                        "fontFamily": "System",
                        "fontSize": 16.8,
                      }
                    }
                    suppressHighlighting={true}
                  >
                    /test
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;
