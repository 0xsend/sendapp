// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ProfileScreen: ProfileScreen 1`] = `
[
  <View
    style={
      {
        "alignSelf": "center",
        "flex": 1,
        "flexDirection": "row",
        "paddingLeft": 32,
        "paddingRight": 32,
        "width": "100%",
      }
    }
  >
    <View
      style={
        {
          "flex": 1,
          "flexDirection": "column",
          "gap": 32,
        }
      }
    >
      <View
        style={
          {
            "flexDirection": "column",
            "gap": 7,
            "width": "100%",
          }
        }
      >
        <View
          style={
            {
              "alignItems": "center",
              "borderBottomLeftRadius": 9,
              "borderBottomRightRadius": 9,
              "borderTopLeftRadius": 9,
              "borderTopRightRadius": 9,
              "flexDirection": "column",
              "gap": 7,
              "height": 84,
              "justifyContent": "center",
              "marginLeft": "auto",
              "marginRight": "auto",
              "maxHeight": 84,
              "maxWidth": 84,
              "minHeight": 84,
              "minWidth": 84,
              "overflow": "hidden",
              "position": "relative",
              "width": 84,
            }
          }
          testID="avatar"
        >
          <View
            style={
              {
                "bottom": 0,
                "flexDirection": "column",
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 1,
              }
            }
          >
            <Image
              accessibilityLabel="Mabel Bechtelar"
              accessibilityRole="image"
              accessible={true}
              fullscreen={true}
              onError={[Function]}
              onLoad={[Function]}
              source={
                {
                  "uri": "https://fjswgwdweohwejbrmiil.supabase.co/storage/v1/object/public/avatars/db59dfd6-16e6-4c30-8337-4bb33905828f/1697315518383.jpeg",
                }
              }
              style={
                {
                  "height": 84,
                  "width": 84,
                }
              }
              testID="avatarImage"
            />
          </View>
          <View
            style={
              {
                "alignItems": "center",
                "backgroundColor": "hsla(191, 32%, 24%, 1)",
                "bottom": 0,
                "flex": 1,
                "flexDirection": "column",
                "justifyContent": "center",
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <Text
              style={
                {
                  "color": "hsla(112, 22%, 59%, 1)",
                  "fontFamily": "System",
                  "fontSize": 74.39999999999999,
                  "fontWeight": "600",
                  "lineHeight": 67,
                }
              }
              suppressHighlighting={true}
            >
              ??
            </Text>
          </View>
        </View>
         
        <Text
          accessibilityRole="header"
          nativeID="profileName"
          selectable={true}
          style={
            {
              "color": "hsla(112, 22%, 59%, 1)",
              "fontFamily": "System",
              "fontSize": 46,
              "fontWeight": "700",
              "lineHeight": 50,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "textTransform": "none",
            }
          }
          suppressHighlighting={true}
        >
          Mabel Bechtelar
        </Text>
        <Text
          accessibilityRole="header"
          selectable={true}
          style={
            {
              "color": "hsla(191, 32%, 50%, 1)",
              "fontFamily": "System",
              "fontSize": 30,
              "fontWeight": "700",
              "lineHeight": 34,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "textTransform": "none",
            }
          }
          suppressHighlighting={true}
        >
          @
          pip_test44677
        </Text>
        <Text
          selectable={true}
          style={
            {
              "color": "hsla(112, 22%, 59%, 1)",
              "fontFamily": "System",
              "fontSize": 16.8,
              "fontWeight": "400",
              "lineHeight": 19,
              "marginBottom": 18,
            }
          }
          suppressHighlighting={true}
        >
          Doctissimae poster est quibus solut quae concuriosum quod, disputatur sit voluptate ea interror pugnantium est conspecta.
        </Text>
        <View
          style={
            {
              "flexDirection": "row",
              "gap": 32,
              "justifyContent": "space-around",
              "maxWidth": 600,
            }
          }
        >
          <View
            accessibilityRole="button"
            cancelable={true}
            cursor="pointer"
            focusable={[Function]}
            minPressDuration={0}
            onBlur={[Function]}
            onFocus={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            onPress={[Function]}
            onPressIn={[Function]}
            onPressOut={[Function]}
            style={
              {
                "alignItems": "center",
                "backgroundColor": "hsla(125, 96%, 47%, 1)",
                "borderBottomColor": "transparent",
                "borderBottomLeftRadius": 16,
                "borderBottomRightRadius": 16,
                "borderBottomWidth": 1,
                "borderLeftColor": "transparent",
                "borderLeftWidth": 1,
                "borderRightColor": "transparent",
                "borderRightWidth": 1,
                "borderStyle": "solid",
                "borderTopColor": "transparent",
                "borderTopLeftRadius": 16,
                "borderTopRightRadius": 16,
                "borderTopWidth": 1,
                "flex": 1,
                "flexDirection": "row",
                "flexWrap": "nowrap",
                "height": 44,
                "justifyContent": "center",
                "paddingLeft": 18,
                "paddingRight": 18,
                "width": "100%",
              }
            }
            testID="openSendDialogButton"
          >
            <Text
              cursor="pointer"
              lineBreakMode="clip"
              numberOfLines={1}
              style={
                {
                  "color": "hsla(191, 32%, 10%, 1)",
                  "flexGrow": 0,
                  "flexShrink": 1,
                  "fontFamily": "System",
                  "fontSize": 16.8,
                  "fontWeight": "400",
                  "lineHeight": 19,
                }
              }
              suppressHighlighting={true}
              userSelect="none"
            >
              Send
            </Text>
          </View>
          <View
            accessibilityRole="button"
            cancelable={true}
            cursor="pointer"
            focusable={[Function]}
            minPressDuration={0}
            onBlur={[Function]}
            onFocus={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            onPress={[Function]}
            onPressIn={[Function]}
            onPressOut={[Function]}
            style={
              {
                "alignItems": "center",
                "backgroundColor": "hsla(191, 32%, 19%, 1)",
                "borderBottomColor": "transparent",
                "borderBottomLeftRadius": 16,
                "borderBottomRightRadius": 16,
                "borderBottomWidth": 1,
                "borderLeftColor": "transparent",
                "borderLeftWidth": 1,
                "borderRightColor": "transparent",
                "borderRightWidth": 1,
                "borderStyle": "solid",
                "borderTopColor": "transparent",
                "borderTopLeftRadius": 16,
                "borderTopRightRadius": 16,
                "borderTopWidth": 1,
                "flex": 1,
                "flexDirection": "row",
                "flexWrap": "nowrap",
                "height": 44,
                "justifyContent": "center",
                "paddingLeft": 18,
                "paddingRight": 18,
                "width": "100%",
              }
            }
          >
            <Text
              cursor="pointer"
              lineBreakMode="clip"
              numberOfLines={1}
              style={
                {
                  "color": "hsla(112, 22%, 59%, 1)",
                  "flexGrow": 0,
                  "flexShrink": 1,
                  "fontFamily": "System",
                  "fontSize": 16.8,
                  "fontWeight": "400",
                  "lineHeight": 19,
                }
              }
              suppressHighlighting={true}
              userSelect="none"
            >
              Request
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>,
  <View
    pointerEvents="box-none"
    style={
      {
        "bottom": 0,
        "flexDirection": "column",
        "left": 0,
        "maxWidth": "100%",
        "position": "absolute",
        "right": 0,
        "top": 0,
        "zIndex": 200000,
      }
    }
  >
    <View
      animatedStyle={
        {
          "value": {
            "transform": [
              {
                "translateY": 10000.1,
              },
            ],
          },
        }
      }
      animation="medium"
      collapsable={false}
      forwardedRef={[Function]}
      onLayout={[Function]}
      pointerEvents="none"
      style={
        {
          "height": "100%",
          "minHeight": "100%",
          "opacity": 0,
          "position": "absolute",
          "transform": [
            {
              "translateY": 10000.1,
            },
          ],
          "width": "100%",
          "zIndex": 200000,
        }
      }
    >
      <View
        style={
          {
            "backgroundColor": "hsla(191, 32%, 10%, 1)",
            "borderTopLeftRadius": 16,
            "borderTopRightRadius": 16,
            "flex": 1,
            "flexDirection": "column",
            "height": 0,
            "justifyContent": "center",
            "maxHeight": "100%",
            "overflow": "hidden",
            "paddingBottom": 24,
            "paddingLeft": 24,
            "paddingRight": 24,
            "paddingTop": 24,
            "width": "100%",
          }
        }
      />
      <View
        style={
          {
            "backgroundColor": "hsla(191, 32%, 10%, 1)",
            "borderBottomLeftRadius": 0,
            "borderBottomRightRadius": 0,
            "borderBottomWidth": 0,
            "borderLeftWidth": 0,
            "borderRightWidth": 0,
            "borderStyle": "solid",
            "borderTopLeftRadius": 0,
            "borderTopRightRadius": 0,
            "borderTopWidth": 0,
            "bottom": "-50%",
            "flex": 1,
            "flexDirection": "column",
            "height": 0,
            "justifyContent": "center",
            "left": 0,
            "maxHeight": "100%",
            "overflow": "hidden",
            "paddingBottom": 24,
            "paddingLeft": 24,
            "paddingRight": 24,
            "paddingTop": 24,
            "position": "absolute",
            "right": 0,
            "shadowOpacity": 0,
            "width": "100%",
            "zIndex": -1,
          }
        }
      />
    </View>
  </View>,
]
`;

exports[`ProfileScreen: SendDialog 1`] = `
[
  <View
    style={
      {
        "alignSelf": "center",
        "flex": 1,
        "flexDirection": "row",
        "paddingLeft": 32,
        "paddingRight": 32,
        "width": "100%",
      }
    }
  >
    <View
      style={
        {
          "flex": 1,
          "flexDirection": "column",
          "gap": 32,
        }
      }
    >
      <View
        style={
          {
            "flexDirection": "column",
            "gap": 7,
            "width": "100%",
          }
        }
      >
        <View
          style={
            {
              "alignItems": "center",
              "borderBottomLeftRadius": 9,
              "borderBottomRightRadius": 9,
              "borderTopLeftRadius": 9,
              "borderTopRightRadius": 9,
              "flexDirection": "column",
              "gap": 7,
              "height": 84,
              "justifyContent": "center",
              "marginLeft": "auto",
              "marginRight": "auto",
              "maxHeight": 84,
              "maxWidth": 84,
              "minHeight": 84,
              "minWidth": 84,
              "overflow": "hidden",
              "position": "relative",
              "width": 84,
            }
          }
          testID="avatar"
        >
          <View
            style={
              {
                "bottom": 0,
                "flexDirection": "column",
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 1,
              }
            }
          >
            <Image
              accessibilityLabel="Mabel Bechtelar"
              accessibilityRole="image"
              accessible={true}
              fullscreen={true}
              onError={[Function]}
              onLoad={[Function]}
              source={
                {
                  "uri": "https://fjswgwdweohwejbrmiil.supabase.co/storage/v1/object/public/avatars/db59dfd6-16e6-4c30-8337-4bb33905828f/1697315518383.jpeg",
                }
              }
              style={
                {
                  "height": 84,
                  "width": 84,
                }
              }
              testID="avatarImage"
            />
          </View>
          <View
            style={
              {
                "alignItems": "center",
                "backgroundColor": "hsla(191, 32%, 24%, 1)",
                "bottom": 0,
                "flex": 1,
                "flexDirection": "column",
                "justifyContent": "center",
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <Text
              style={
                {
                  "color": "hsla(112, 22%, 59%, 1)",
                  "fontFamily": "System",
                  "fontSize": 74.39999999999999,
                  "fontWeight": "600",
                  "lineHeight": 67,
                }
              }
              suppressHighlighting={true}
            >
              ??
            </Text>
          </View>
        </View>
         
        <Text
          accessibilityRole="header"
          nativeID="profileName"
          selectable={true}
          style={
            {
              "color": "hsla(112, 22%, 59%, 1)",
              "fontFamily": "System",
              "fontSize": 46,
              "fontWeight": "700",
              "lineHeight": 50,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "textTransform": "none",
            }
          }
          suppressHighlighting={true}
        >
          Mabel Bechtelar
        </Text>
        <Text
          accessibilityRole="header"
          selectable={true}
          style={
            {
              "color": "hsla(191, 32%, 50%, 1)",
              "fontFamily": "System",
              "fontSize": 30,
              "fontWeight": "700",
              "lineHeight": 34,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "textTransform": "none",
            }
          }
          suppressHighlighting={true}
        >
          @
          pip_test44677
        </Text>
        <Text
          selectable={true}
          style={
            {
              "color": "hsla(112, 22%, 59%, 1)",
              "fontFamily": "System",
              "fontSize": 16.8,
              "fontWeight": "400",
              "lineHeight": 19,
              "marginBottom": 18,
            }
          }
          suppressHighlighting={true}
        >
          Doctissimae poster est quibus solut quae concuriosum quod, disputatur sit voluptate ea interror pugnantium est conspecta.
        </Text>
        <View
          style={
            {
              "flexDirection": "row",
              "gap": 32,
              "justifyContent": "space-around",
              "maxWidth": 600,
            }
          }
        >
          <View
            accessibilityRole="button"
            cancelable={true}
            cursor="pointer"
            focusable={[Function]}
            minPressDuration={0}
            onBlur={[Function]}
            onFocus={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            onPress={[Function]}
            onPressIn={[Function]}
            onPressOut={[Function]}
            style={
              {
                "alignItems": "center",
                "backgroundColor": "hsla(125, 96%, 47%, 1)",
                "borderBottomColor": "transparent",
                "borderBottomLeftRadius": 16,
                "borderBottomRightRadius": 16,
                "borderBottomWidth": 1,
                "borderLeftColor": "transparent",
                "borderLeftWidth": 1,
                "borderRightColor": "transparent",
                "borderRightWidth": 1,
                "borderStyle": "solid",
                "borderTopColor": "transparent",
                "borderTopLeftRadius": 16,
                "borderTopRightRadius": 16,
                "borderTopWidth": 1,
                "flex": 1,
                "flexDirection": "row",
                "flexWrap": "nowrap",
                "height": 44,
                "justifyContent": "center",
                "paddingLeft": 18,
                "paddingRight": 18,
                "width": "100%",
              }
            }
            testID="openSendDialogButton"
          >
            <Text
              cursor="pointer"
              lineBreakMode="clip"
              numberOfLines={1}
              style={
                {
                  "color": "hsla(191, 32%, 10%, 1)",
                  "flexGrow": 0,
                  "flexShrink": 1,
                  "fontFamily": "System",
                  "fontSize": 16.8,
                  "fontWeight": "400",
                  "lineHeight": 19,
                }
              }
              suppressHighlighting={true}
              userSelect="none"
            >
              Send
            </Text>
          </View>
          <View
            accessibilityRole="button"
            cancelable={true}
            cursor="pointer"
            focusable={[Function]}
            minPressDuration={0}
            onBlur={[Function]}
            onFocus={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            onPress={[Function]}
            onPressIn={[Function]}
            onPressOut={[Function]}
            style={
              {
                "alignItems": "center",
                "backgroundColor": "hsla(191, 32%, 19%, 1)",
                "borderBottomColor": "transparent",
                "borderBottomLeftRadius": 16,
                "borderBottomRightRadius": 16,
                "borderBottomWidth": 1,
                "borderLeftColor": "transparent",
                "borderLeftWidth": 1,
                "borderRightColor": "transparent",
                "borderRightWidth": 1,
                "borderStyle": "solid",
                "borderTopColor": "transparent",
                "borderTopLeftRadius": 16,
                "borderTopRightRadius": 16,
                "borderTopWidth": 1,
                "flex": 1,
                "flexDirection": "row",
                "flexWrap": "nowrap",
                "height": 44,
                "justifyContent": "center",
                "paddingLeft": 18,
                "paddingRight": 18,
                "width": "100%",
              }
            }
          >
            <Text
              cursor="pointer"
              lineBreakMode="clip"
              numberOfLines={1}
              style={
                {
                  "color": "hsla(112, 22%, 59%, 1)",
                  "flexGrow": 0,
                  "flexShrink": 1,
                  "fontFamily": "System",
                  "fontSize": 16.8,
                  "fontWeight": "400",
                  "lineHeight": 19,
                }
              }
              suppressHighlighting={true}
              userSelect="none"
            >
              Request
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>,
  <View
    pointerEvents="box-none"
    style={
      {
        "bottom": 0,
        "flexDirection": "column",
        "left": 0,
        "maxWidth": "100%",
        "position": "absolute",
        "right": 0,
        "top": 0,
        "zIndex": 200000,
      }
    }
  >
    <View
      animatedStyle={
        {
          "value": {
            "opacity": 0,
          },
        }
      }
      cancelable={true}
      collapsable={false}
      focusable={true}
      forwardedRef={[Function]}
      minPressDuration={0}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onPress={[Function]}
      onPressIn={[Function]}
      onPressOut={[Function]}
      pointerEvents="auto"
      style={
        {
          "backgroundColor": "rgba(0,0,0,0.9)",
          "bottom": 0,
          "flexDirection": "column",
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "zIndex": 99999,
        }
      }
    />
    <View
      animatedStyle={
        {
          "value": {
            "transform": [
              {
                "translateY": 10000.1,
              },
            ],
          },
        }
      }
      animation="medium"
      collapsable={false}
      forwardedRef={[Function]}
      onLayout={[Function]}
      pointerEvents="auto"
      style={
        {
          "height": "100%",
          "minHeight": "100%",
          "opacity": 1,
          "position": "absolute",
          "transform": [
            {
              "translateY": 10000.1,
            },
          ],
          "width": "100%",
          "zIndex": 200000,
        }
      }
    >
      <View
        style={
          {
            "backgroundColor": "hsla(191, 32%, 10%, 1)",
            "borderTopLeftRadius": 16,
            "borderTopRightRadius": 16,
            "flex": 1,
            "flexDirection": "column",
            "height": 0,
            "justifyContent": "center",
            "maxHeight": "100%",
            "overflow": "hidden",
            "paddingBottom": 24,
            "paddingLeft": 24,
            "paddingRight": 24,
            "paddingTop": 24,
            "width": "100%",
          }
        }
      >
        <View
          style={
            {
              "alignSelf": "center",
              "flex": 1,
              "flexDirection": "row",
              "paddingLeft": 32,
              "paddingRight": 32,
              "width": "100%",
            }
          }
          testID="sendDialogContainer"
        >
          <View
            style={
              {
                "flex": 1,
                "flexDirection": "column",
                "gap": 24,
              }
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "gap": 7,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  id="title-:r0:"
                  selectable={true}
                  style={
                    {
                      "color": "hsla(112, 22%, 59%, 1)",
                      "fontFamily": "System",
                      "fontSize": 30,
                      "fontWeight": "700",
                      "lineHeight": 34,
                      "marginBottom": 0,
                      "marginLeft": 0,
                      "marginRight": 0,
                      "marginTop": 0,
                      "textTransform": "none",
                    }
                  }
                  suppressHighlighting={true}
                >
                  Send
                </Text>
              </View>
              <View
                accessibilityLabel="Dialog Close"
                accessibilityRole="button"
                cancelable={true}
                cursor="pointer"
                focusable={[Function]}
                minPressDuration={0}
                onBlur={[Function]}
                onFocus={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onPress={[Function]}
                onPressIn={[Function]}
                onPressOut={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "backgroundColor": "hsla(191, 32%, 19%, 1)",
                    "borderBottomColor": "transparent",
                    "borderBottomLeftRadius": 100000,
                    "borderBottomRightRadius": 100000,
                    "borderBottomWidth": 1,
                    "borderLeftColor": "transparent",
                    "borderLeftWidth": 1,
                    "borderRightColor": "transparent",
                    "borderRightWidth": 1,
                    "borderStyle": "solid",
                    "borderTopColor": "transparent",
                    "borderTopLeftRadius": 100000,
                    "borderTopRightRadius": 100000,
                    "borderTopWidth": 1,
                    "flexDirection": "row",
                    "flexWrap": "nowrap",
                    "height": 32,
                    "justifyContent": "center",
                    "maxHeight": 32,
                    "maxWidth": 32,
                    "minHeight": 32,
                    "minWidth": 32,
                    "paddingBottom": 0,
                    "paddingLeft": 0,
                    "paddingRight": 0,
                    "paddingTop": 0,
                    "width": 32,
                  }
                }
              >
                <RNSVGSvgView
                  align="xMidYMid"
                  bbHeight="24"
                  bbWidth="24"
                  color="hsla(112, 22%, 59%, 1)"
                  focusable={false}
                  height={24}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  strokeWidth="2"
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      {
                        "opacity": 0.5,
                      },
                      {
                        "flex": 0,
                        "height": 24,
                        "width": 24,
                      },
                    ]
                  }
                  tintColor="hsla(112, 22%, 59%, 1)"
                  vbHeight={24}
                  vbWidth={24}
                  width={24}
                >
                  <RNSVGGroup
                    fill={
                      {
                        "payload": 4278190080,
                        "type": 0,
                      }
                    }
                    opacity={0.5}
                    propList={
                      [
                        "strokeWidth",
                      ]
                    }
                    strokeWidth="2"
                  >
                    <RNSVGPath
                      d="M10.7879 12L8.3639 9.57597C8.20777 9.41431 8.12137 9.1978 8.12332 8.97306C8.12528 8.74832 8.21542 8.53333 8.37434 8.37441C8.53326 8.21549 8.74825 8.12535 8.97299 8.12339C9.19773 8.12144 9.41424 8.20784 9.5759 8.36397L11.9999 10.788L14.4239 8.36397C14.503 8.28211 14.5976 8.21681 14.7021 8.17188C14.8067 8.12696 14.9192 8.10332 15.033 8.10233C15.1468 8.10134 15.2597 8.12303 15.365 8.16612C15.4703 8.20922 15.566 8.27287 15.6465 8.35335C15.727 8.43383 15.7907 8.52953 15.8337 8.63487C15.8768 8.74021 15.8985 8.85308 15.8975 8.96689C15.8966 9.0807 15.8729 9.19317 15.828 9.29775C15.7831 9.40232 15.7178 9.4969 15.6359 9.57597L13.2119 12L15.6359 14.424C15.7178 14.503 15.7831 14.5976 15.828 14.7022C15.8729 14.8068 15.8966 14.9192 15.8975 15.0331C15.8985 15.1469 15.8768 15.2597 15.8337 15.3651C15.7907 15.4704 15.727 15.5661 15.6465 15.6466C15.566 15.7271 15.4703 15.7907 15.365 15.8338C15.2597 15.8769 15.1468 15.8986 15.033 15.8976C14.9192 15.8966 14.8067 15.873 14.7021 15.8281C14.5976 15.7831 14.503 15.7178 14.4239 15.636L11.9999 13.212L9.5759 15.636C9.41424 15.7921 9.19773 15.8785 8.97299 15.8765C8.74825 15.8746 8.53326 15.7845 8.37434 15.6255C8.21542 15.4666 8.12528 15.2516 8.12332 15.0269C8.12137 14.8021 8.20777 14.5856 8.3639 14.424L10.7879 12Z"
                      fill={
                        {
                          "type": 2,
                        }
                      }
                      propList={
                        [
                          "fill",
                        ]
                      }
                    />
                    <RNSVGPath
                      d="M12 22.2857C13.3507 22.2857 14.6883 22.0197 15.9362 21.5028C17.1841 20.9859 18.318 20.2282 19.2731 19.2731C20.2282 18.318 20.9859 17.1841 21.5028 15.9362C22.0197 14.6883 22.2857 13.3507 22.2857 12C22.2857 10.6493 22.0197 9.31175 21.5028 8.06383C20.9859 6.81591 20.2282 5.68202 19.2731 4.7269C18.318 3.77178 17.1841 3.01414 15.9362 2.49724C14.6883 1.98033 13.3507 1.71429 12 1.71429C9.27206 1.71429 6.65585 2.79796 4.7269 4.7269C2.79796 6.65585 1.71429 9.27206 1.71429 12C1.71429 14.7279 2.79796 17.3442 4.7269 19.2731C6.65585 21.202 9.27206 22.2857 12 22.2857ZM12 24C8.8174 24 5.76515 22.7357 3.51472 20.4853C1.26428 18.2348 0 15.1826 0 12C0 8.8174 1.26428 5.76515 3.51472 3.51472C5.76515 1.26428 8.8174 0 12 0C15.1826 0 18.2348 1.26428 20.4853 3.51472C22.7357 5.76515 24 8.8174 24 12C24 15.1826 22.7357 18.2348 20.4853 20.4853C18.2348 22.7357 15.1826 24 12 24Z"
                      fill={
                        {
                          "type": 2,
                        }
                      }
                      propList={
                        [
                          "fill",
                        ]
                      }
                    />
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
            <Text
              id="description-:r0:"
              selectable={true}
              style={
                {
                  "color": "hsla(112, 22%, 59%, 1)",
                  "fontFamily": "System",
                  "fontSize": 16.8,
                  "fontWeight": "400",
                  "lineHeight": 19,
                }
              }
              suppressHighlighting={true}
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "column",
                    "gap": 24,
                  }
                }
              >
                <View
                  style={
                    {
                      "alignItems": "center",
                      "borderBottomLeftRadius": 9,
                      "borderBottomRightRadius": 9,
                      "borderTopLeftRadius": 9,
                      "borderTopRightRadius": 9,
                      "flexDirection": "column",
                      "gap": 7,
                      "height": 84,
                      "justifyContent": "center",
                      "marginLeft": "auto",
                      "marginRight": "auto",
                      "maxHeight": 84,
                      "maxWidth": 84,
                      "minHeight": 84,
                      "minWidth": 84,
                      "overflow": "hidden",
                      "position": "relative",
                      "width": 84,
                    }
                  }
                  testID="avatar"
                >
                  <View
                    style={
                      {
                        "bottom": 0,
                        "flexDirection": "column",
                        "left": 0,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                        "zIndex": 1,
                      }
                    }
                  >
                    <Image
                      accessibilityLabel="Mabel Bechtelar"
                      accessibilityRole="image"
                      accessible={true}
                      fullscreen={true}
                      onError={[Function]}
                      onLoad={[Function]}
                      source={
                        {
                          "uri": "https://fjswgwdweohwejbrmiil.supabase.co/storage/v1/object/public/avatars/db59dfd6-16e6-4c30-8337-4bb33905828f/1697315518383.jpeg",
                        }
                      }
                      style={
                        {
                          "height": 84,
                          "width": 84,
                        }
                      }
                      testID="avatarImage"
                    />
                  </View>
                  <View
                    style={
                      {
                        "alignItems": "center",
                        "backgroundColor": "hsla(191, 32%, 24%, 1)",
                        "bottom": 0,
                        "flex": 1,
                        "flexDirection": "column",
                        "justifyContent": "center",
                        "left": 0,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                        "zIndex": 0,
                      }
                    }
                  >
                    <Text
                      style={
                        {
                          "color": "hsla(112, 22%, 59%, 1)",
                          "fontFamily": "System",
                          "fontSize": 74.39999999999999,
                          "fontWeight": "600",
                          "lineHeight": 67,
                        }
                      }
                      suppressHighlighting={true}
                    >
                      ??
                    </Text>
                  </View>
                </View>
                <Text
                  style={
                    {
                      "color": "hsla(112, 22%, 59%, 1)",
                      "fontFamily": "System",
                      "fontSize": 16.8,
                      "fontWeight": "bold",
                      "lineHeight": 19,
                    }
                  }
                  suppressHighlighting={true}
                >
                  Mabel Bechtelar
                </Text>
              </View>
            </Text>
            <View
              onLayout={[Function]}
              onSubmit={[Function]}
              style={
                {
                  "flex": 1,
                  "flexDirection": "column",
                  "gap": 18,
                  "justifyContent": "space-between",
                }
              }
            >
              <RCTScrollView
                scrollEnabled={true}
                style={{}}
              >
                <View>
                  <View
                    style={
                      {
                        "flexDirection": "column",
                        "gap": 7,
                        "paddingBottom": 46,
                        "paddingLeft": 18,
                        "paddingRight": 18,
                        "paddingTop": 18,
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flexDirection": "column",
                        }
                      }
                    >
                      <Text
                        cancelable={true}
                        cursor="default"
                        focusable={true}
                        htmlFor=":r3:"
                        id=":r4:"
                        minPressDuration={0}
                        onBlur={[Function]}
                        onFocus={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onPress={[Function]}
                        onPressIn={[Function]}
                        onPressOut={[Function]}
                        style={
                          {
                            "alignItems": "center",
                            "backgroundColor": "transparent",
                            "color": "hsla(191, 32%, 50%, 1)",
                            "display": "flex",
                            "fontFamily": "System",
                            "fontSize": 15.6,
                            "fontWeight": "300",
                            "lineHeight": 36,
                          }
                        }
                        suppressHighlighting={true}
                        userSelect="none"
                      >
                        Amount
                         
                      </Text>
                      <View
                        animatedStyle={
                          {
                            "value": {
                              "transform": [
                                {
                                  "translateX": 0,
                                },
                              ],
                            },
                          }
                        }
                        collapsable={false}
                        style={
                          {
                            "transform": [
                              {
                                "translateX": 0,
                              },
                            ],
                          }
                        }
                      >
                        <TextInput
                          control={
                            {
                              "_defaultValues": {},
                              "_disableForm": [Function],
                              "_executeSchema": [Function],
                              "_fields": {
                                "amount": {
                                  "_f": {
                                    "mount": true,
                                    "name": "amount",
                                    "ref": {
                                      "focus": [Function],
                                      "reportValidity": [Function],
                                      "select": [Function],
                                      "setCustomValidity": [Function],
                                    },
                                    "value": undefined,
                                  },
                                },
                                "token": {
                                  "_f": {
                                    "mount": true,
                                    "name": "token",
                                    "ref": {
                                      "name": "token",
                                    },
                                    "value": undefined,
                                  },
                                },
                              },
                              "_formState": {
                                "dirtyFields": {},
                                "disabled": false,
                                "errors": {},
                                "isDirty": false,
                                "isLoading": false,
                                "isSubmitSuccessful": false,
                                "isSubmitted": false,
                                "isSubmitting": false,
                                "isValid": false,
                                "isValidating": false,
                                "submitCount": 0,
                                "touchedFields": {},
                              },
                              "_formValues": {
                                "amount": undefined,
                                "token": undefined,
                              },
                              "_getDirty": [Function],
                              "_getFieldArray": [Function],
                              "_getWatch": [Function],
                              "_names": {
                                "array": Set {},
                                "mount": Set {
                                  "amount",
                                  "token",
                                },
                                "unMount": Set {},
                                "watch": Set {
                                  "token",
                                },
                              },
                              "_options": {
                                "mode": "onSubmit",
                                "reValidateMode": "onChange",
                                "shouldFocusError": true,
                              },
                              "_proxyFormState": {
                                "dirtyFields": false,
                                "disabled": true,
                                "errors": true,
                                "isDirty": false,
                                "isSubmitting": true,
                                "isValid": false,
                                "isValidating": false,
                                "touchedFields": false,
                              },
                              "_removeUnmounted": [Function],
                              "_reset": [Function],
                              "_resetDefaultValues": [Function],
                              "_state": {
                                "action": false,
                                "mount": true,
                                "watch": false,
                              },
                              "_subjects": {
                                "array": {
                                  "next": [Function],
                                  "observers": [],
                                  "subscribe": [Function],
                                  "unsubscribe": [Function],
                                },
                                "state": {
                                  "next": [Function],
                                  "observers": [
                                    {
                                      "next": [Function],
                                    },
                                    {
                                      "next": [Function],
                                    },
                                    {
                                      "next": [Function],
                                    },
                                    {
                                      "next": [Function],
                                    },
                                  ],
                                  "subscribe": [Function],
                                  "unsubscribe": [Function],
                                },
                                "values": {
                                  "next": [Function],
                                  "observers": [
                                    {
                                      "next": [Function],
                                    },
                                    {
                                      "next": [Function],
                                    },
                                  ],
                                  "subscribe": [Function],
                                  "unsubscribe": [Function],
                                },
                              },
                              "_updateDisabledField": [Function],
                              "_updateFieldArray": [Function],
                              "_updateFormState": [Function],
                              "_updateValid": [Function],
                              "getFieldState": [Function],
                              "handleSubmit": [Function],
                              "register": [Function],
                              "setError": [Function],
                              "unregister": [Function],
                            }
                          }
                          focusable={true}
                          id=":r3:"
                          keyboardType="number-pad"
                          name="amount"
                          onBlur={[Function]}
                          onChangeText={[Function]}
                          onFocus={[Function]}
                          outlineWidth={0}
                          placeholderTextColor="hsla(191, 32%, 50%, 1)"
                          readOnly={false}
                          style={
                            {
                              "backgroundColor": "hsla(191, 32%, 10%, 1)",
                              "borderBottomColor": "hsla(191, 32%, 32%, 1)",
                              "borderBottomLeftRadius": 16,
                              "borderBottomRightRadius": 16,
                              "borderBottomWidth": 1,
                              "borderLeftColor": "hsla(191, 32%, 32%, 1)",
                              "borderLeftWidth": 1,
                              "borderRightColor": "hsla(191, 32%, 32%, 1)",
                              "borderRightWidth": 1,
                              "borderStyle": "solid",
                              "borderTopColor": "hsla(191, 32%, 32%, 1)",
                              "borderTopLeftRadius": 16,
                              "borderTopRightRadius": 16,
                              "borderTopWidth": 1,
                              "color": "hsla(112, 22%, 59%, 1)",
                              "fontFamily": "System",
                              "fontSize": 16.8,
                              "fontWeight": "400",
                              "height": 44,
                              "minWidth": 0,
                              "paddingLeft": 16,
                              "paddingRight": 16,
                            }
                          }
                          value="0"
                        />
                      </View>
                    </View>
                    <View
                      style={
                        {
                          "flexDirection": "column",
                        }
                      }
                    >
                      <Text
                        cancelable={true}
                        cursor="default"
                        focusable={true}
                        htmlFor=":r5:"
                        id=":r6:"
                        minPressDuration={0}
                        onBlur={[Function]}
                        onFocus={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onPress={[Function]}
                        onPressIn={[Function]}
                        onPressOut={[Function]}
                        style={
                          {
                            "alignItems": "center",
                            "backgroundColor": "transparent",
                            "color": "hsla(191, 32%, 50%, 1)",
                            "display": "flex",
                            "fontFamily": "System",
                            "fontSize": 15.6,
                            "fontWeight": "300",
                            "lineHeight": 36,
                          }
                        }
                        suppressHighlighting={true}
                        userSelect="none"
                      >
                        Token
                         
                        (Optional)
                      </Text>
                      <View
                        animatedStyle={
                          {
                            "value": {
                              "transform": [
                                {
                                  "translateX": 0,
                                },
                              ],
                            },
                          }
                        }
                        collapsable={false}
                        style={
                          {
                            "transform": [
                              {
                                "translateX": 0,
                              },
                            ],
                          }
                        }
                      >
                        <View
                          accessibilityState={
                            {
                              "expanded": false,
                            }
                          }
                          cancelable={true}
                          cursor="pointer"
                          disabled={false}
                          focusable={[Function]}
                          minPressDuration={0}
                          onBlur={[Function]}
                          onFocus={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          onPress={[Function]}
                          onPressIn={[Function]}
                          onPressOut={[Function]}
                          style={
                            {
                              "alignItems": "center",
                              "backgroundColor": "hsla(191, 32%, 10%, 1)",
                              "borderBottomColor": "hsla(191, 32%, 24%, 1)",
                              "borderBottomLeftRadius": 16,
                              "borderBottomRightRadius": 16,
                              "borderBottomWidth": 1,
                              "borderLeftColor": "hsla(191, 32%, 24%, 1)",
                              "borderLeftWidth": 1,
                              "borderRightColor": "hsla(191, 32%, 24%, 1)",
                              "borderRightWidth": 1,
                              "borderStyle": "solid",
                              "borderTopColor": "hsla(191, 32%, 24%, 1)",
                              "borderTopLeftRadius": 16,
                              "borderTopRightRadius": 16,
                              "borderTopWidth": 1,
                              "flexDirection": "row",
                              "flexWrap": "nowrap",
                              "justifyContent": "space-between",
                              "maxWidth": "100%",
                              "minHeight": 44,
                              "overflow": "hidden",
                              "paddingBottom": 10,
                              "paddingLeft": 18,
                              "paddingRight": 18,
                              "paddingTop": 10,
                              "width": 180,
                            }
                          }
                        >
                          <Text
                            lineBreakMode="clip"
                            numberOfLines={1}
                            pointerEvents="none"
                            selectable={false}
                            style={
                              {
                                "color": "hsla(112, 22%, 59%, 1)",
                                "fontFamily": "System",
                                "fontSize": 16.8,
                                "fontWeight": "400",
                                "lineHeight": 19,
                              }
                            }
                            suppressHighlighting={true}
                          >
                            Something
                          </Text>
                          <View
                            pointerEvents="none"
                            style={
                              {
                                "height": 16.8,
                                "minHeight": 16.8,
                                "minWidth": 16.8,
                                "width": 16.8,
                              }
                            }
                          />
                          <RNSVGSvgView
                            align="xMidYMid"
                            bbHeight="16.8"
                            bbWidth="16.8"
                            fill="none"
                            focusable={false}
                            height={16.8}
                            meetOrSlice={0}
                            minX={0}
                            minY={0}
                            stroke="hsla(112, 22%, 59%, 1)"
                            strokeLinecap="round"
                            strokeLinejoin="round"
                            strokeWidth="2"
                            style={
                              [
                                {
                                  "backgroundColor": "transparent",
                                  "borderWidth": 0,
                                },
                                {},
                                {
                                  "flex": 0,
                                  "height": 16,
                                  "width": 16,
                                },
                              ]
                            }
                            vbHeight={24}
                            vbWidth={24}
                            width={16.8}
                          >
                            <RNSVGGroup
                              fill={null}
                              propList={
                                [
                                  "fill",
                                  "stroke",
                                  "strokeWidth",
                                  "strokeLinecap",
                                  "strokeLinejoin",
                                ]
                              }
                              stroke={
                                {
                                  "payload": 4287016319,
                                  "type": 0,
                                }
                              }
                              strokeLinecap={1}
                              strokeLinejoin={1}
                              strokeWidth="2"
                            >
                              <RNSVGPath
                                d="m6 9 6 6 6-6"
                                fill={
                                  {
                                    "payload": 4278190080,
                                    "type": 0,
                                  }
                                }
                                propList={
                                  [
                                    "stroke",
                                  ]
                                }
                                stroke={
                                  {
                                    "payload": 4287016319,
                                    "type": 0,
                                  }
                                }
                              />
                            </RNSVGGroup>
                          </RNSVGSvgView>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </RCTScrollView>
              <View
                onLayout={[Function]}
                style={
                  {
                    "paddingBottom": 0,
                  }
                }
              >
                <View
                  style={
                    {
                      "flexDirection": "column-reverse",
                      "gap": 18,
                      "paddingBottom": 18,
                      "paddingLeft": 18,
                      "paddingRight": 18,
                    }
                  }
                >
                  <View
                    accessibilityRole="button"
                    accessibilityState={
                      {
                        "busy": false,
                      }
                    }
                    cancelable={true}
                    cursor="pointer"
                    disabled={false}
                    focusable={[Function]}
                    minPressDuration={0}
                    onBlur={[Function]}
                    onFocus={[Function]}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onPress={[Function]}
                    onPressIn={[Function]}
                    onPressOut={[Function]}
                    style={
                      {
                        "alignItems": "center",
                        "backgroundColor": "hsla(191, 32%, 19%, 1)",
                        "borderBottomColor": "transparent",
                        "borderBottomLeftRadius": 16,
                        "borderBottomRightRadius": 16,
                        "borderBottomWidth": 1,
                        "borderLeftColor": "transparent",
                        "borderLeftWidth": 1,
                        "borderRightColor": "transparent",
                        "borderRightWidth": 1,
                        "borderStyle": "solid",
                        "borderTopColor": "transparent",
                        "borderTopLeftRadius": 16,
                        "borderTopRightRadius": 16,
                        "borderTopWidth": 1,
                        "flexDirection": "row",
                        "flexWrap": "nowrap",
                        "height": 44,
                        "justifyContent": "center",
                        "paddingLeft": 18,
                        "paddingRight": 18,
                      }
                    }
                  >
                    <Text
                      cursor="pointer"
                      lineBreakMode="clip"
                      numberOfLines={1}
                      style={
                        {
                          "color": "hsla(112, 22%, 59%, 1)",
                          "flexGrow": 0,
                          "flexShrink": 1,
                          "fontFamily": "System",
                          "fontSize": 16.8,
                          "fontWeight": "400",
                          "lineHeight": 19,
                        }
                      }
                      suppressHighlighting={true}
                      userSelect="none"
                    >
                      Send
                    </Text>
                    <View
                      pointerEvents="none"
                      style={
                        {
                          "height": 0,
                          "minHeight": 0,
                          "minWidth": 11.088000000000001,
                          "width": 11.088000000000001,
                        }
                      }
                    />
                  </View>
                </View>
              </View>
            </View>
            <View
              pointerEvents="box-none"
              style={
                {
                  "bottom": 0,
                  "flexDirection": "column",
                  "left": 0,
                  "maxWidth": "100%",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                  "zIndex": 200001,
                }
              }
            >
              <View
                animatedStyle={
                  {
                    "value": {
                      "transform": [
                        {
                          "translateY": 10000.1,
                        },
                      ],
                    },
                  }
                }
                collapsable={false}
                forwardedRef={[Function]}
                onLayout={[Function]}
                pointerEvents="none"
                style={
                  {
                    "height": "80%",
                    "minHeight": "80%",
                    "opacity": 0,
                    "position": "absolute",
                    "transform": [
                      {
                        "translateY": 10000.1,
                      },
                    ],
                    "width": "100%",
                    "zIndex": 200001,
                  }
                }
              >
                <View
                  style={
                    {
                      "backgroundColor": "hsla(191, 32%, 10%, 1)",
                      "borderTopLeftRadius": 16,
                      "borderTopRightRadius": 16,
                      "flex": 1,
                      "flexDirection": "column",
                      "height": 0,
                      "maxHeight": "100%",
                      "overflow": "hidden",
                      "width": "100%",
                    }
                  }
                >
                  <RCTScrollView
                    onMoveShouldSetResponder={[Function]}
                    onResponderRelease={[Function]}
                    onScroll={[Function]}
                    onStartShouldSetResponder={[Function]}
                    scrollEnabled={true}
                    scrollEventThrottle={8}
                    style={
                      {
                        "flex": 1,
                      }
                    }
                  >
                    <View>
                      <View
                        style={
                          {
                            "alignSelf": "flex-start",
                            "flexDirection": "row",
                          }
                        }
                      >
                        <View
                          accessibilityLabelledBy=":rc:"
                          accessibilityRole="none"
                          style={
                            {
                              "flexDirection": "column",
                              "width": "100%",
                            }
                          }
                        >
                          <View
                            accessibilityLabelledBy=":rd:"
                            accessibilityState={
                              {
                                "disabled": undefined,
                                "selected": true,
                              }
                            }
                            cancelable={true}
                            cursor="pointer"
                            focusable={true}
                            minPressDuration={0}
                            onBlur={[Function]}
                            onFocus={[Function]}
                            onMouseEnter={[Function]}
                            onMouseLeave={[Function]}
                            onPress={[Function]}
                            onPressIn={[Function]}
                            onPressOut={[Function]}
                            style={
                              {
                                "alignItems": "center",
                                "backgroundColor": "hsla(191, 32%, 10%, 1)",
                                "borderBottomColor": "hsla(191, 32%, 24%, 1)",
                                "borderLeftColor": "hsla(191, 32%, 24%, 1)",
                                "borderRightColor": "hsla(191, 32%, 24%, 1)",
                                "borderTopColor": "hsla(191, 32%, 24%, 1)",
                                "flexDirection": "row",
                                "flexWrap": "nowrap",
                                "justifyContent": "space-between",
                                "maxWidth": "100%",
                                "minHeight": 44,
                                "overflow": "hidden",
                                "paddingBottom": 10,
                                "paddingLeft": 18,
                                "paddingRight": 18,
                                "paddingTop": 10,
                                "width": "100%",
                              }
                            }
                            tabIndex={-1}
                          >
                            <Text
                              id=":rd:"
                              lineBreakMode="clip"
                              numberOfLines={1}
                              style={
                                {
                                  "color": "hsla(112, 22%, 59%, 1)",
                                  "fontFamily": "System",
                                  "fontSize": 16.8,
                                  "fontWeight": "400",
                                  "lineHeight": 19,
                                }
                              }
                              suppressHighlighting={true}
                              userSelect="none"
                            >
                              ETH
                            </Text>
                            <View
                              accessibilityElementsHidden={true}
                              aria-hidden={true}
                              style={
                                {
                                  "flexDirection": "row",
                                  "marginLeft": "auto",
                                }
                              }
                            >
                              <RNSVGSvgView
                                align="xMidYMid"
                                bbHeight="16"
                                bbWidth="16"
                                fill="none"
                                focusable={false}
                                height={16}
                                meetOrSlice={0}
                                minX={0}
                                minY={0}
                                stroke="hsla(112, 22%, 59%, 1)"
                                strokeLinecap="round"
                                strokeLinejoin="round"
                                strokeWidth="2"
                                style={
                                  [
                                    {
                                      "backgroundColor": "transparent",
                                      "borderWidth": 0,
                                    },
                                    {},
                                    {
                                      "flex": 0,
                                      "height": 16,
                                      "width": 16,
                                    },
                                  ]
                                }
                                vbHeight={24}
                                vbWidth={24}
                                width={16}
                              >
                                <RNSVGGroup
                                  fill={null}
                                  propList={
                                    [
                                      "fill",
                                      "stroke",
                                      "strokeWidth",
                                      "strokeLinecap",
                                      "strokeLinejoin",
                                    ]
                                  }
                                  stroke={
                                    {
                                      "payload": 4287016319,
                                      "type": 0,
                                    }
                                  }
                                  strokeLinecap={1}
                                  strokeLinejoin={1}
                                  strokeWidth="2"
                                >
                                  <RNSVGPath
                                    d="M20 6 9 17l-5-5"
                                    fill={
                                      {
                                        "payload": 4278190080,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "stroke",
                                      ]
                                    }
                                    stroke={
                                      {
                                        "payload": 4287016319,
                                        "type": 0,
                                      }
                                    }
                                  />
                                </RNSVGGroup>
                              </RNSVGSvgView>
                            </View>
                          </View>
                          <View
                            pointerEvents="none"
                            style={
                              {
                                "height": 0,
                                "minHeight": 0,
                                "minWidth": 0,
                                "width": 0,
                              }
                            }
                          />
                          <View
                            accessibilityLabelledBy=":re:"
                            accessibilityState={
                              {
                                "disabled": undefined,
                                "selected": false,
                              }
                            }
                            cancelable={true}
                            cursor="pointer"
                            focusable={true}
                            minPressDuration={0}
                            onBlur={[Function]}
                            onFocus={[Function]}
                            onMouseEnter={[Function]}
                            onMouseLeave={[Function]}
                            onPress={[Function]}
                            onPressIn={[Function]}
                            onPressOut={[Function]}
                            style={
                              {
                                "alignItems": "center",
                                "backgroundColor": "hsla(191, 32%, 10%, 1)",
                                "borderBottomColor": "hsla(191, 32%, 24%, 1)",
                                "borderLeftColor": "hsla(191, 32%, 24%, 1)",
                                "borderRightColor": "hsla(191, 32%, 24%, 1)",
                                "borderTopColor": "hsla(191, 32%, 24%, 1)",
                                "flexDirection": "row",
                                "flexWrap": "nowrap",
                                "justifyContent": "space-between",
                                "maxWidth": "100%",
                                "minHeight": 44,
                                "overflow": "hidden",
                                "paddingBottom": 10,
                                "paddingLeft": 18,
                                "paddingRight": 18,
                                "paddingTop": 10,
                                "width": "100%",
                              }
                            }
                            tabIndex={-1}
                          >
                            <Text
                              id=":re:"
                              lineBreakMode="clip"
                              numberOfLines={1}
                              style={
                                {
                                  "color": "hsla(112, 22%, 59%, 1)",
                                  "fontFamily": "System",
                                  "fontSize": 16.8,
                                  "fontWeight": "400",
                                  "lineHeight": 19,
                                }
                              }
                              suppressHighlighting={true}
                              userSelect="none"
                            >
                              USDC
                            </Text>
                          </View>
                        </View>
                      </View>
                    </View>
                  </RCTScrollView>
                </View>
                <View
                  style={
                    {
                      "backgroundColor": "hsla(191, 32%, 10%, 1)",
                      "borderBottomLeftRadius": 0,
                      "borderBottomRightRadius": 0,
                      "borderBottomWidth": 0,
                      "borderLeftWidth": 0,
                      "borderRightWidth": 0,
                      "borderStyle": "solid",
                      "borderTopLeftRadius": 0,
                      "borderTopRightRadius": 0,
                      "borderTopWidth": 0,
                      "bottom": "-50%",
                      "flex": 1,
                      "flexDirection": "column",
                      "height": 0,
                      "left": 0,
                      "maxHeight": "100%",
                      "overflow": "hidden",
                      "position": "absolute",
                      "right": 0,
                      "shadowOpacity": 0,
                      "width": "100%",
                      "zIndex": -1,
                    }
                  }
                />
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          {
            "backgroundColor": "hsla(191, 32%, 10%, 1)",
            "borderBottomLeftRadius": 0,
            "borderBottomRightRadius": 0,
            "borderBottomWidth": 0,
            "borderLeftWidth": 0,
            "borderRightWidth": 0,
            "borderStyle": "solid",
            "borderTopLeftRadius": 0,
            "borderTopRightRadius": 0,
            "borderTopWidth": 0,
            "bottom": "-50%",
            "flex": 1,
            "flexDirection": "column",
            "height": 0,
            "justifyContent": "center",
            "left": 0,
            "maxHeight": "100%",
            "overflow": "hidden",
            "paddingBottom": 24,
            "paddingLeft": 24,
            "paddingRight": 24,
            "paddingTop": 24,
            "position": "absolute",
            "right": 0,
            "shadowOpacity": 0,
            "width": "100%",
            "zIndex": -1,
          }
        }
      />
    </View>
  </View>,
]
`;
