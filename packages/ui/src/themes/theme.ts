import { masks } from '@tamagui/themes'
import { createThemeBuilder } from '@tamagui/theme-builder'
import { accentDark, accentLight } from './colors'
import { maskOptions as templateMaskOptions } from './templates'

const maskOptions0 = {
  override: {
    shadowColor: 0,
    shadowColorHover: 0,
    shadowColorPress: 0,
    shadowColorFocus: 0,
    color: 0,
    colorHover: 0,
    colorFocus: 0,
    colorPress: 0,
  },
  skip: {
    shadowColor: 0,
    shadowColorHover: 0,
    shadowColorPress: 0,
    shadowColorFocus: 0,
    color1: 1,
    color2: 2,
    color3: 3,
    color4: 4,
    color5: 5,
    color6: 6,
    color7: 7,
    color8: 8,
    color9: 9,
    color10: 10,
    color11: 11,
    color12: 12,
  },
  max: 13,
  min: 1,
  overrideSwap: { accentBackground: 0, accentColor: 0 },
  overrideShift: {
    shadowColor: 0,
    shadowColorHover: 0,
    shadowColorPress: 0,
    shadowColorFocus: 0,
    color: 0,
    colorHover: 0,
    colorFocus: 0,
    colorPress: 0,
  },
}
// biome-ignore lint/suspicious/noExplicitAny: for now adding this type here to avoid TS issues inferring, will fix better soon
const maskOptions: Record<string, any> = {
  maskOptions0,
  maskOptions1: { theme: { background: 'rgba(0,0,0,0.5)' } },
  maskOptions2: { theme: { background: 'rgba(0,0,0,0.9)' } },
}

const palettes = {
  light_base: [
    'hsla(180, 20%, 99%, 0)',
    'hsla(180, 20%, 99%, 0.25)',
    'hsla(180, 20%, 99%, 0.5)',
    'hsla(180, 20%, 99%, 0.75)',
    'hsla(191, 32%, 99%, 1)',
    'hsla(191, 32%, 93%, 1)',
    'hsla(191, 32%, 88%, 1)',
    'hsla(191, 32%, 83%, 1)',
    'hsla(191, 32%, 77%, 1)',
    'hsla(191, 32%, 72%, 1)',
    'hsla(191, 32%, 66%, 1)',
    'hsla(191, 32%, 61%, 1)',
    'hsla(191, 32%, 55%, 1)',
    'hsla(191, 32%, 50%, 1)',
    'hsla(96, 16%, 25%, 1)',
    'hsla(112, 22%, 0%, 1)',
    'hsla(0, 0%, 0%, 0.75)',
    'hsla(0, 0%, 0%, 0.5)',
    'hsla(0, 0%, 0%, 0.25)',
    'hsla(0, 0%, 0%, 0)',
  ],
  dark_base: [
    'hsla(191, 33%, 10%, 0)',
    'hsla(191, 33%, 10%, 0.25)',
    'hsla(191, 33%, 10%, 0.5)',
    'hsla(191, 33%, 10%, 0.75)',
    'hsla(191, 32%, 10%, 1)',
    'hsla(191, 32%, 15%, 1)',
    'hsla(191, 32%, 19%, 1)',
    'hsla(191, 32%, 24%, 1)',
    'hsla(191, 32%, 28%, 1)',
    'hsla(191, 32%, 32%, 1)',
    'hsla(191, 32%, 37%, 1)',
    'hsla(191, 32%, 41%, 1)',
    'hsla(191, 32%, 46%, 1)',
    'hsla(191, 32%, 50%, 1)',
    'hsla(112, 22%, 59%, 1)',
    'hsla(112, 22%, 100%, 1)',
    'hsla(0, 0%, 100%, 0.75)',
    'hsla(0, 0%, 100%, 0.5)',
    'hsla(0, 0%, 100%, 0.25)',
    'hsla(0, 0%, 100%, 0)',
  ],
  light_accent: accentLight,
  dark_accent: accentDark,
  light_green: [
    'hsla(160, 60%, 99%, 0)',
    'hsla(160, 60%, 99%, 0.25)',
    'hsla(160, 60%, 99%, 0.5)',
    'hsla(160, 60%, 99%, 0.75)',
    'hsla(153, 70%, 99%, 1)',
    'hsla(153, 70%, 93%, 1)',
    'hsla(153, 70%, 88%, 1)',
    'hsla(153, 70%, 82%, 1)',
    'hsla(153, 70%, 77%, 1)',
    'hsla(153, 70%, 72%, 1)',
    'hsla(153, 70%, 66%, 1)',
    'hsla(153, 70%, 61%, 1)',
    'hsla(153, 70%, 55%, 1)',
    'hsla(153, 70%, 50%, 1)',
    'hsla(153, 70%, 15%, 1)',
    'hsla(153, 70%, 10%, 1)',
    'hsla(153, 69%, 10%, 0.75)',
    'hsla(153, 69%, 10%, 0.5)',
    'hsla(153, 69%, 10%, 0.25)',
    'hsla(153, 69%, 10%, 0)',
  ],
  dark_green: [
    'hsla(153, 69%, 10%, 0)',
    'hsla(153, 69%, 10%, 0.25)',
    'hsla(153, 69%, 10%, 0.5)',
    'hsla(153, 69%, 10%, 0.75)',
    'hsla(153, 70%, 10%, 1)',
    'hsla(153, 70%, 14%, 1)',
    'hsla(153, 70%, 19%, 1)',
    'hsla(153, 70%, 23%, 1)',
    'hsla(153, 70%, 28%, 1)',
    'hsla(153, 70%, 32%, 1)',
    'hsla(153, 70%, 37%, 1)',
    'hsla(153, 70%, 41%, 1)',
    'hsla(153, 70%, 46%, 1)',
    'hsla(153, 70%, 50%, 1)',
    'hsla(153, 70%, 93%, 1)',
    'hsla(153, 70%, 95%, 1)',
    'hsla(153, 69%, 95%, 0.75)',
    'hsla(153, 69%, 95%, 0.5)',
    'hsla(153, 69%, 95%, 0.25)',
    'hsla(153, 69%, 95%, 0)',
  ],
  light_yellow: [
    'hsla(60, 60%, 99%, 0)',
    'hsla(60, 60%, 99%, 0.25)',
    'hsla(60, 60%, 99%, 0.5)',
    'hsla(60, 60%, 99%, 0.75)',
    'hsla(48, 70%, 99%, 1)',
    'hsla(48, 70%, 93%, 1)',
    'hsla(48, 70%, 88%, 1)',
    'hsla(48, 70%, 82%, 1)',
    'hsla(48, 70%, 77%, 1)',
    'hsla(48, 70%, 72%, 1)',
    'hsla(48, 70%, 66%, 1)',
    'hsla(48, 70%, 61%, 1)',
    'hsla(48, 70%, 55%, 1)',
    'hsla(48, 70%, 50%, 1)',
    'hsla(48, 70%, 15%, 1)',
    'hsla(48, 70%, 10%, 1)',
    'hsla(48, 69%, 10%, 0.75)',
    'hsla(48, 69%, 10%, 0.5)',
    'hsla(48, 69%, 10%, 0.25)',
    'hsla(48, 69%, 10%, 0)',
  ],
  dark_yellow: [
    'hsla(48, 69%, 10%, 0)',
    'hsla(48, 69%, 10%, 0.25)',
    'hsla(48, 69%, 10%, 0.5)',
    'hsla(48, 69%, 10%, 0.75)',
    'hsla(48, 70%, 10%, 1)',
    'hsla(48, 70%, 14%, 1)',
    'hsla(48, 70%, 19%, 1)',
    'hsla(48, 70%, 23%, 1)',
    'hsla(48, 70%, 28%, 1)',
    'hsla(48, 70%, 32%, 1)',
    'hsla(48, 70%, 37%, 1)',
    'hsla(48, 70%, 41%, 1)',
    'hsla(48, 70%, 46%, 1)',
    'hsla(48, 70%, 50%, 1)',
    'hsla(48, 70%, 93%, 1)',
    'hsla(48, 70%, 95%, 1)',
    'hsla(50, 69%, 95%, 0.75)',
    'hsla(50, 69%, 95%, 0.5)',
    'hsla(50, 69%, 95%, 0.25)',
    'hsla(50, 69%, 95%, 0)',
  ],
  light_red: [
    'hsla(0, 60%, 99%, 0)',
    'hsla(0, 60%, 99%, 0.25)',
    'hsla(0, 60%, 99%, 0.5)',
    'hsla(0, 60%, 99%, 0.75)',
    'hsla(0, 70%, 99%, 1)',
    'hsla(0, 70%, 93%, 1)',
    'hsla(0, 70%, 88%, 1)',
    'hsla(0, 70%, 82%, 1)',
    'hsla(0, 70%, 77%, 1)',
    'hsla(0, 70%, 72%, 1)',
    'hsla(0, 70%, 66%, 1)',
    'hsla(0, 70%, 61%, 1)',
    'hsla(0, 70%, 55%, 1)',
    'hsla(0, 70%, 50%, 1)',
    'hsla(0, 70%, 15%, 1)',
    'hsla(0, 70%, 10%, 1)',
    'hsla(0, 69%, 10%, 0.75)',
    'hsla(0, 69%, 10%, 0.5)',
    'hsla(0, 69%, 10%, 0.25)',
    'hsla(0, 69%, 10%, 0)',
  ],
  dark_red: [
    'hsla(0, 69%, 10%, 0)',
    'hsla(0, 69%, 10%, 0.25)',
    'hsla(0, 69%, 10%, 0.5)',
    'hsla(0, 69%, 10%, 0.75)',
    'hsla(0, 70%, 10%, 1)',
    'hsla(0, 70%, 14%, 1)',
    'hsla(0, 70%, 19%, 1)',
    'hsla(0, 70%, 23%, 1)',
    'hsla(0, 70%, 28%, 1)',
    'hsla(0, 70%, 32%, 1)',
    'hsla(0, 70%, 37%, 1)',
    'hsla(0, 70%, 41%, 1)',
    'hsla(0, 70%, 46%, 1)',
    'hsla(0, 70%, 50%, 1)',
    'hsla(0, 70%, 93%, 1)',
    'hsla(0, 70%, 95%, 1)',
    'hsla(0, 69%, 95%, 0.75)',
    'hsla(0, 69%, 95%, 0.5)',
    'hsla(0, 69%, 95%, 0.25)',
    'hsla(0, 69%, 95%, 0)',
  ],
}

const templates = {
  base: {
    accentBackground: '$accent.4',
    accentColor: '$accent.-4',
    background0: 1,
    background025: 2,
    background05: 3,
    background075: 4,
    color0: -4,
    color025: -3,
    color05: -2,
    color075: -1,
    background: 4,
    backgroundHover: 5,
    backgroundPress: 6,
    backgroundFocus: 7,
    color: -5,
    colorHover: -6,
    colorPress: -5,
    colorFocus: -6,
    placeholderColor: -6,
    borderColor: 7,
    borderColorHover: 8,
    borderColorFocus: 9,
    borderColorPress: 8,
    color1: 4,
    color2: 5,
    color3: 6,
    color4: 7,
    color5: 8,
    color6: 9,
    color7: 10,
    color8: 11,
    color9: 12,
    color10: 13,
    color11: 14,
    color12: 15,
  },
  surface: {
    accentBackground: '$accent.4',
    accentColor: '$accent.-4',
    background0: 1,
    background025: 2,
    background05: 3,
    background075: 4,
    color0: -4,
    color025: -3,
    color05: -2,
    color075: -1,
    background: 7,
    backgroundHover: 8,
    backgroundPress: 9,
    backgroundFocus: 10,
    color: -5,
    colorHover: -6,
    colorPress: -5,
    colorFocus: -6,
    placeholderColor: -6,
    borderColor: 10,
    borderColorHover: 11,
    borderColorFocus: 12,
    borderColorPress: 11,
    color1: 4,
    color2: 5,
    color3: 6,
    color4: 7,
    color5: 8,
    color6: 9,
    color7: 10,
    color8: 11,
    color9: 12,
    color10: 13,
    color11: 14,
    color12: 15,
  },
}

export const themes = createThemeBuilder()
  .addPalettes(palettes)
  .addTemplates(templates)
  .addMasks(masks)
  .addThemes({
    light: { template: 'base', palette: 'light_base' },
    dark: { template: 'base', palette: 'dark_base' },
  })
  .addChildThemes({
    disabled: { mask: 'soften2' },
    dim: { mask: 'soften' },
    alt1: {
      mask: 'soften',
      ...templateMaskOptions.alt,
    },
    alt2: {
      mask: 'soften2',
      ...templateMaskOptions.alt,
    },
    active: {
      mask: 'strengthen',
      skip: {
        color: 1,
      },
    },
    error: [
      { parent: 'dark', template: 'base', palette: 'red' },
      { parent: 'light', template: 'base', palette: 'red' },
    ],
    red: [
      { parent: 'light', template: 'base', palette: 'light_red' },
      { parent: 'dark', template: 'base', palette: 'dark_red' },
    ],
    warning: [
      { parent: 'dark', template: 'base', palette: 'yellow' },
      { parent: 'light', template: 'base', palette: 'yellow' },
    ],
    success: [
      { parent: 'dark', template: 'base', palette: 'green' },
      { parent: 'light', template: 'base', palette: 'green' },
    ],
  })
  .addChildThemes({
    accent: [
      { parent: 'light', template: 'base', palette: 'light_accent' },
      { parent: 'dark', template: 'base', palette: 'dark_accent' },
    ],
  })
  .addChildThemes({
    Card: { mask: 'soften', ...maskOptions.maskOptions0 },
    Button: [
      { parent: 'light_accent', template: 'surface', palette: 'light_accent' },
      { parent: 'dark_accent', template: 'surface', palette: 'dark_accent' },
      { parent: 'light', mask: 'soften2', ...maskOptions.maskOptions0 },
      { parent: 'dark', mask: 'soften2', ...maskOptions.maskOptions0 },
    ],
    Checkbox: { mask: 'softenBorder2', ...maskOptions.maskOptions0 },
    Switch: [
      { parent: 'light_accent', template: 'surface', palette: 'light_accent' },
      { parent: 'dark_accent', template: 'surface', palette: 'dark_accent' },
      { parent: 'light', mask: 'soften2', ...maskOptions.maskOptions0 },
      { parent: 'dark', mask: 'soften2', ...maskOptions.maskOptions0 },
    ],
    SwitchThumb: { mask: 'inverse', ...maskOptions.maskOptions0 },
    TooltipContent: { mask: 'soften2', ...maskOptions.maskOptions0 },
    DrawerFrame: { mask: 'soften', ...maskOptions.maskOptions0 },
    Progress: { mask: 'soften', ...maskOptions.maskOptions0 },
    RadioGroupItem: { mask: 'softenBorder2', ...maskOptions.maskOptions0 },
    TooltipArrow: { mask: 'soften', ...maskOptions.maskOptions0 },
    SliderTrackActive: { mask: 'inverseSoften', ...maskOptions.maskOptions0 },
    SliderTrack: { mask: 'soften2', ...maskOptions.maskOptions0 },
    SliderThumb: { mask: 'inverse', ...maskOptions.maskOptions0 },
    Tooltip: { mask: 'inverse', ...maskOptions.maskOptions0 },
    ProgressIndicator: { mask: 'inverse', ...maskOptions.maskOptions0 },
    SheetOverlay: [
      { parent: 'light', ...maskOptions.maskOptions1 },
      { parent: 'dark', ...maskOptions.maskOptions2 },
    ],
    DialogOverlay: [
      { parent: 'light', ...maskOptions.maskOptions1 },
      { parent: 'dark', ...maskOptions.maskOptions2 },
    ],
    ModalOverlay: [
      { parent: 'light', ...maskOptions.maskOptions1 },
      { parent: 'dark', ...maskOptions.maskOptions2 },
    ],
    Input: { mask: 'softenBorder2', ...maskOptions.maskOptions0 },
    TextArea: { mask: 'softenBorder2', ...maskOptions.maskOptions0 },
  })
  .build()
